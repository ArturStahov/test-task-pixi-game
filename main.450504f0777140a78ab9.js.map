{"version":3,"sources":["webpack:///./assets/BTN_Spin_d.png","webpack:///./assets/SYM3.png","webpack:///./assets/SYM5.png","webpack:///./assets/SYM2.png","webpack:///./assets/sound/runPlay.mp3","webpack:///./assets/sound/won.mp3","webpack:///./assets/sound/click.mp3","webpack:///./assets/sound/Sound_fon.mp3","webpack:///./app.js","webpack:///./index.js","webpack:///./js/scens/LoadingScene/loadingScene.js","webpack:///./js/scens/GameScene/gameScene.js","webpack:///./js/scens/GameScene/buttonPlay.js","webpack:///./js/scens/GameScene/creditsPanel.js","webpack:///./js/scens/WinScene/winScene.js","webpack:///./js/scens/WinScene/buttonNextPlay.js","webpack:///./js/scens/GameOverScene/gameOverScene.js","webpack:///./js/scens/GameOverScene/buttonNewGame.js","webpack:///./js/logics/generateRandomInt.js","webpack:///./js/logics/checkPlayResult.js","webpack:///./assets/BTN_Spin.png","webpack:///./assets/BG.png","webpack:///./assets/SYM6.png","webpack:///./assets/SYM4.png","webpack:///./assets/SYM1.png"],"names":["module","exports","window","__PIXI_INSPECTOR_GLOBAL_HOOK__","register","PIXI","app","transparent","resolution","devicePixelRatio","renderer","backgroundColor","view","style","position","display","resize","innerWidth","innerHeight","width","height","document","body","appendChild","add","load","slotTextures","from","buttonPlayTexture","timePlay","timeWinView","loadingScene","SpinnerLoading","fontFamily","fontSize","fill","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","Math","PI","dropShadowDistance","anchor","set","screen","addChild","stage","gameScene","bg","buttonPlay","interactive","buttonMode","on","handlerClickPlay","creditsPanels","credits","winSalary","panelContainer","Box","lineStyle","beginFill","drawRoundedRect","pivot","endFill","creditsText","winSalaryText","creditsPanel","x","y","winScene","winText","winSceneInit","buttonNextPlay","drawRect","buttonNextPlayInit","handlerClickNextPlay","gameOverScene","losText","gameOverSceneInit","buttonNewGame","buttonNewGameInit","handlerClickNewGame","gameItemsArr","itemId","itemSkin","gameAreaContainer","createRandomGameArea","visible","state","play","ticker","delta","gameLoop","roundResult","soundWin","Audio","soundsWin","soundClick","soundsClick","soundsPlay","soundPlay","soundsFon","soundFon","timeLoadingGame","isLoadingGame","targetClick","targetWin","gameAreaResults","gameCombo","a","b","c","min","max","i","rowContainer","row","symbols","j","randomItemId","length","floor","random","symbolContainer","SelectEffect","SYMBOL_SIZE","filters","BlurFilter","symbol","scale","round","itemSymbol","ItemObj","push","console","log","children","text","texture","resultLineItem","forEach","item","gsap","to","duration","ease","modifiers","utils","unitize","parseFloat","repeat","loop","eventPreloadingGame","removeChild","win","loss","resultCheckWild","some","checkSymbol","resultCheckArbitrary","filter","checkALine","checkBLine","checkCLine","checkPlayResult","pause","currentTime","WIN_PRIZE"],"mappings":"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","file":"main.450504f0777140a78ab9.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/BTN_Spin_d.png\";","module.exports = __webpack_public_path__ + \"assets/SYM3.png\";","module.exports = __webpack_public_path__ + \"assets/SYM5.png\";","module.exports = __webpack_public_path__ + \"assets/SYM2.png\";","export default __webpack_public_path__ + \"static/media/runPlay.563738c7.mp3\";","export default __webpack_public_path__ + \"static/media/won.01408a5f.mp3\";","export default __webpack_public_path__ + \"static/media/click.747cc046.mp3\";","export default __webpack_public_path__ + \"static/media/Sound_fon.9f887eb4.mp3\";","import * as PIXI from 'pixi.js'\r\n\r\nfunction registerPixiInspector() {\r\n    window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\r\n}\r\nregisterPixiInspector()\r\nconst app = new PIXI.Application({\r\n    transparent: false,\r\n    resolution: window.devicePixelRatio,\r\n});\r\napp.renderer.backgroundColor = 0x061639;\r\napp.renderer.view.style.position = \"absolute\";\r\napp.renderer.view.style.display = \"block\";\r\napp.renderer.resize(window.innerWidth, window.innerHeight);\r\napp.view.style.width = window.innerWidth + \"px\";\r\napp.view.style.height = window.innerHeight + \"px\";\r\n\r\nexport default app","import * as PIXI from 'pixi.js'\r\nimport gsap from 'gsap'\r\n\r\nimport '@csstools/normalize.css'\r\nimport './base.css'\r\nimport './assets/SYM1.png'\r\nimport './assets/SYM2.png'\r\nimport './assets/SYM3.png'\r\nimport './assets/SYM4.png'\r\nimport './assets/SYM5.png'\r\nimport './assets/SYM6.png'\r\nimport './assets/BG.png'\r\nimport './assets/BTN_Spin.png'\r\nimport './assets/BTN_Spin_d.png'\r\nimport soundPlay from './assets/sound/runPlay.mp3'\r\nimport soundsWin from './assets/sound/won.mp3'\r\nimport soundsClick from './assets/sound/click.mp3'\r\nimport soundFon from './assets/sound/Sound_fon.mp3'\r\nimport app from './app'\r\nimport { loadingSceneInit } from './js/scens/LoadingScene'\r\nimport { winSceneInit } from './js/scens/WinScene'\r\nimport { buttonNextPlayInit } from './js/scens/WinScene'\r\nimport { gameSceneInit } from './js/scens/GameScene'\r\nimport { buttonPlayInit } from './js/scens/GameScene'\r\nimport { creditsPanel } from './js/scens/GameScene'\r\nimport { gameOverSceneInit } from './js/scens/GameOverScene'\r\nimport { generateRandomInt } from './js/logics/generateRandomInt'\r\nimport { checkPlayResult } from './js/logics/checkPlayResult'\r\nimport { buttonNewGameInit } from './js/scens/GameOverScene'\r\n\r\ndocument.body.appendChild(app.view);\r\n\r\n// const load = PIXI.Loader.shared\r\n// let id\r\n// let bg                                                   don't works ?\r\n// id = load.resources['./assets/assets.json'].textures;\r\n// bg = new Sprite(id[\"BG.png\"]);\r\n\r\n\r\nconst loaders = new PIXI.Loader();\r\nloaders\r\n    .add('SYM1', './assets/SYM1.png')\r\n    .add('SYM2', './assets/SYM2.png')\r\n    .add('SYM3', './assets/SYM3.png')\r\n    .add('SYM4', './assets/SYM4.png')\r\n    .add('SYM5', './assets/SYM5.png')\r\n    .add('SYM6', './assets/SYM6.png')\r\n    .add('background', './assets/BG.png')\r\n    .add('button', './assets/BTN_Spin.png')\r\n    .add('button-disable', './assets/BTN_Spin_d.png')\r\n    .load(setup);\r\n\r\nlet soundWin = new Audio(soundsWin);\r\nlet soundClick = new Audio(soundsClick)\r\nlet soundsPlay = new Audio(soundPlay)\r\nlet soundsFon = new Audio(soundFon)\r\n\r\nconst ROW_WIDTH = 200;\r\nconst SYMBOL_SIZE = 150;\r\nconst INITIAL_TIME_PLAY = 300;\r\nconst INITIAL_TIME_WIN = 300;\r\nconst WIN_PRIZE = 10\r\nconst SPINS_PRICE = 5;\r\n\r\n\r\nlet state;\r\nlet gameScene;\r\nlet buttonPlay;\r\nlet buttonPlayTexture;\r\nlet loadingScene;\r\nlet winScene;\r\nlet gameOverScene;\r\nlet creditsPanels;\r\nlet timePlay;\r\nlet timeWinView;\r\nlet gameAreaContainer;\r\nlet credits = 1000;\r\nlet winSalary = 0;\r\nlet timeLoadingGame = 50;\r\nlet isLoadingGame = true;\r\nlet targetClick = false;\r\nlet targetWin = false;\r\nlet gameItemsArr = [];\r\nlet gameAreaResults = []; //ссылки на итемы в столбцах на сцене\r\nlet gameCombo = {\r\n    a: [],\r\n    b: [],\r\n    c: [],\r\n};\r\nlet roundResult;\r\n\r\n\r\nfunction setup() {\r\n\r\n    const slotTextures = [\r\n        PIXI.Texture.from('SYM1'),\r\n        PIXI.Texture.from('SYM2'),\r\n        PIXI.Texture.from('SYM3'),\r\n        PIXI.Texture.from('SYM4'),\r\n        PIXI.Texture.from('SYM5'),\r\n        PIXI.Texture.from('SYM6'),\r\n    ];\r\n    buttonPlayTexture = [\r\n        PIXI.Texture.from('button'),\r\n        PIXI.Texture.from('button-disable'),\r\n    ];\r\n\r\n    timePlay = INITIAL_TIME_PLAY;\r\n    timeWinView = INITIAL_TIME_WIN;\r\n\r\n    //Loading Scene initialize\r\n    loadingScene = loadingSceneInit();\r\n    app.stage.addChild(loadingScene);\r\n\r\n    //Game Scene initialize\r\n    gameScene = gameSceneInit();\r\n    buttonPlay = buttonPlayInit(buttonPlayTexture);\r\n    buttonPlay.on('pointerdown', handlerClickPlay);\r\n    gameScene.addChild(buttonPlay);\r\n    creditsPanels = creditsPanel(credits, winSalary)\r\n    creditsPanels.x = app.screen.width - 200;\r\n    creditsPanels.y = app.screen.height - 200;\r\n    gameScene.addChild(creditsPanels);\r\n    app.stage.addChild(gameScene);\r\n\r\n    //Win Scene initialize\r\n    winScene = winSceneInit();\r\n    const buttonNextPlay = buttonNextPlayInit();\r\n    buttonNextPlay.on('pointerdown', handlerClickNextPlay);\r\n    winScene.addChild(buttonNextPlay);\r\n    app.stage.addChild(winScene);\r\n\r\n    //Game Over scene init\r\n    gameOverScene = gameOverSceneInit();\r\n    const buttonNewGame = buttonNewGameInit();\r\n    buttonNewGame.on('pointerdown', handlerClickNewGame);\r\n    gameOverScene.addChild(buttonNewGame);\r\n    app.stage.addChild(gameOverScene);\r\n\r\n    //all game item\r\n    gameItemsArr = [\r\n        { itemId: 0, itemSkin: slotTextures[0] },\r\n        { itemId: 1, itemSkin: slotTextures[1] },\r\n        { itemId: 2, itemSkin: slotTextures[2] },\r\n        { itemId: 3, itemSkin: slotTextures[3] },\r\n        { itemId: 4, itemSkin: slotTextures[4] },\r\n        { itemId: 5, itemSkin: slotTextures[5] },\r\n    ]\r\n\r\n    //init  game area\r\n    gameAreaContainer = createRandomGameArea()\r\n    gameScene.addChild(gameAreaContainer);\r\n\r\n    //start view game scene property\r\n    loadingScene.visible = true;\r\n    gameScene.visible = false;\r\n    winScene.visible = false;\r\n    gameOverScene.visible = false;\r\n\r\n    state = play;\r\n    app.ticker.add(delta => gameLoop(delta));\r\n}\r\n\r\n\r\nconst createRandomGameArea = () => {\r\n    const gameAreaContainer = new PIXI.Container(); // общый контейнер поля\r\n    gameCombo = { // очищаем\r\n        a: [],\r\n        b: [],\r\n        c: [],\r\n    }\r\n    gameAreaResults = [];// очищаем\r\n\r\n    for (let i = 0; i < 3; i += 1) {\r\n        const rowContainer = new PIXI.Container();   // контейнер столбца\r\n        rowContainer.x = i * ROW_WIDTH;\r\n        gameAreaContainer.addChild(rowContainer);\r\n\r\n        const row = {\r\n            symbols: [],    //масив всех символов в столбце         \r\n        };\r\n\r\n        // Build the symbols\r\n        for (let j = 0; j < 3; j += 1) {\r\n            let randomItemId = generateRandomInt(0, gameItemsArr.length - 1);\r\n            const symbolContainer = new PIXI.Container()\r\n            const SelectEffect = new PIXI.Graphics();\r\n            SelectEffect.beginFill(0xFFAA00, 0.7);\r\n            SelectEffect.drawRoundedRect(0, 0, SYMBOL_SIZE, SYMBOL_SIZE - 35, 16);\r\n            SelectEffect.pivot.set(SYMBOL_SIZE / 2, SYMBOL_SIZE / 2)\r\n            SelectEffect.endFill();\r\n            SelectEffect.filters = [new PIXI.filters.BlurFilter()]\r\n            symbolContainer.addChild(SelectEffect)\r\n            SelectEffect.y = 10;\r\n            SelectEffect.x = 15;\r\n            SelectEffect.visible = false;\r\n\r\n            const symbol = new PIXI.Sprite.from(gameItemsArr[randomItemId].itemSkin);\r\n            symbol.y = 0;\r\n            symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n            symbol.x = 0;\r\n            symbol.anchor.set(0.5);\r\n            symbolContainer.addChild(symbol)\r\n\r\n            symbolContainer.y = j * SYMBOL_SIZE;\r\n            symbolContainer.x = Math.round(SYMBOL_SIZE / 2);\r\n            gameItemsArr[randomItemId].itemSymbol = symbolContainer;\r\n\r\n            // const symbol = new PIXI.Sprite.from(gameItemsArr[randomItemId].itemSkin);\r\n            // symbol.y = j * SYMBOL_SIZE;\r\n            // symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n            // symbol.x = Math.round((SYMBOL_SIZE - symbol.width) / 2);\r\n            // row.symbols.push(ItemObj); // заносим в масив столбца\r\n            // rowContainer.addChild(symbol);\r\n            const ItemObj = {\r\n                itemId: randomItemId,\r\n                itemSymbol: symbolContainer\r\n            }\r\n            row.symbols.push(symbolContainer);\r\n            rowContainer.addChild(symbolContainer);\r\n            switch (j) {\r\n                case 0:\r\n                    gameCombo.a.push(ItemObj);\r\n                    break;\r\n                case 1:\r\n                    gameCombo.b.push(ItemObj);\r\n                    break;\r\n                case 2:\r\n                    gameCombo.c.push(ItemObj);\r\n                    break;\r\n                default: console.log(\"error value\");\r\n\r\n            }\r\n\r\n        }\r\n        gameAreaResults.push(row);\r\n    }\r\n\r\n    gameAreaContainer.width = app.screen.width / 2;\r\n    gameAreaContainer.y = app.screen.height / 2 + 50;\r\n    gameAreaContainer.x = app.screen.width / 2 + 50;\r\n    gameAreaContainer.pivot.set(gameAreaContainer.width / 2, gameAreaContainer.height / 2);\r\n    return gameAreaContainer;\r\n}\r\n\r\n\r\n//NextPlay button Win Scene handler\r\nconst handlerClickNextPlay = () => {\r\n    targetWin = false;\r\n    winScene.visible = false;\r\n    timeWinView = INITIAL_TIME_WIN;\r\n}\r\n\r\n//New Game button   handler\r\nconst handlerClickNewGame = () => {\r\n    gameOverScene.visible = false;\r\n    credits = 1000;\r\n    winSalary = 0;\r\n    creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n    creditsPanels.children[2].text = `WIN: ${winSalary}$`;\r\n}\r\n\r\n//Game Scene button Play handler\r\nconst handlerClickPlay = () => {\r\n    if (!targetClick) {\r\n        targetClick = true;\r\n        timePlay = INITIAL_TIME_PLAY;\r\n        buttonPlay.texture = buttonPlayTexture[1];\r\n        credits -= SPINS_PRICE;\r\n        creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n\r\n        if (roundResult && roundResult.resultLineItem.length > 0) {\r\n            roundResult.resultLineItem.forEach(item => item.itemSymbol.children[0].visible = false)\r\n        }\r\n\r\n        for (let i = 0; i < 3; i += 1) {\r\n            gameAreaResults[i].symbols[0].filters = [new PIXI.filters.BlurFilter(0.7, 0.9, 0.6)]\r\n            gameAreaResults[i].symbols[1].filters = [new PIXI.filters.BlurFilter(0.8, 0.9, 0.6)]\r\n            gameAreaResults[i].symbols[2].filters = [new PIXI.filters.BlurFilter(1, 0.9, 0.6)]\r\n\r\n            gsap.to(gameAreaResults[i].symbols[0], {\r\n                duration: 0.2,\r\n                ease: \"none\",\r\n                y: 200, //move each box 500px to right\r\n                modifiers: {\r\n                    y: gsap.utils.unitize(y => parseFloat(y) % 250) //force x value to be between 0 and 500 using modulus\r\n                },\r\n                repeat: -1\r\n            });\r\n            gsap.to(gameAreaResults[i].symbols[1], {\r\n                duration: 0.2,\r\n                ease: \"none\",\r\n                y: -75, //move each box 500px to right\r\n                modifiers: {\r\n                    y: gsap.utils.unitize(y => parseFloat(y) % 200) //force x value to be between 0 and 500 using modulus\r\n                },\r\n                repeat: -1\r\n            });\r\n            gsap.to(gameAreaResults[i].symbols[2], {\r\n                duration: 0.2,\r\n                ease: \"none\",\r\n                y: -100, //move each box 500px to right\r\n                modifiers: {\r\n                    y: gsap.utils.unitize(y => parseFloat(y) % 300) //force x value to be between 0 and 500 using modulus\r\n                },\r\n                repeat: -1\r\n            });\r\n        }\r\n        soundClick.play();\r\n        soundsPlay.play();\r\n        soundsFon.play();\r\n        soundsFon.loop = true;\r\n    }\r\n}\r\n\r\n//game event preloading event\r\nconst eventPreloadingGame = () => {\r\n    if (isLoadingGame) {\r\n        timeLoadingGame -= 1;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    if (timeLoadingGame == 0) {\r\n        isLoadingGame = false;\r\n        loadingScene.visible = false;\r\n        gameScene.visible = true;\r\n        return;\r\n    }\r\n}\r\n//Game Over event\r\nconst eventViewGameOver = () => {\r\n    gameOverScene.visible = true;\r\n}\r\n\r\n//Game Win event\r\nconst eventViewGameWin = () => {\r\n    winScene.visible = true;\r\n}\r\n\r\nfunction gameLoop(delta) {\r\n    state(delta);\r\n}\r\n\r\nfunction play() {\r\n    eventPreloadingGame();\r\n\r\n    if (targetClick) {\r\n        timePlay -= 1;\r\n\r\n        if (timePlay == 0) {\r\n            targetClick = false;\r\n            buttonPlay.texture = buttonPlayTexture[0];\r\n            gameAreaResults = [];\r\n            gameScene.removeChild(gameAreaContainer);\r\n            gameAreaContainer = createRandomGameArea();\r\n            gameScene.addChild(gameAreaContainer);\r\n            roundResult = checkPlayResult(gameCombo);\r\n            soundsPlay.pause();\r\n            soundsPlay.currentTime = 0;\r\n            console.log(gameAreaResults)\r\n            if (roundResult.win) {\r\n                roundResult.resultLineItem.forEach(item => item.itemSymbol.children[0].visible = true)\r\n                eventViewGameWin();\r\n                credits += WIN_PRIZE;\r\n                winSalary += WIN_PRIZE;\r\n                creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n                creditsPanels.children[2].text = `WIN: ${winSalary}$`;\r\n                winScene.children[2].text = `${WIN_PRIZE}$`;\r\n                targetWin = true;\r\n                soundWin.play();\r\n                return\r\n            }\r\n            if (roundResult.loss) {\r\n                eventViewGameOver();\r\n                roundResult.resultLineItem.forEach(item => item.itemSymbol.children[0].visible = true)\r\n                credits = 0\r\n                creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n                creditsPanels.children[2].text = `WIN: ${winSalary}$`;\r\n                return\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    if (targetWin) {\r\n        timeWinView -= 1;\r\n        console.log(timeWinView)\r\n        if (timeWinView == 0) {\r\n            targetWin = false;\r\n            winScene.visible = false;\r\n            timeWinView = INITIAL_TIME_WIN;\r\n        }\r\n    }\r\n}\r\n\r\nfunction end() {\r\n    //All the code that should run at the end of the game\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n//loading Scene initialize\r\nexport const loadingSceneInit = () => {\r\n    const loadingScene = new PIXI.Container()\r\n    const SpinnerLoading = new PIXI.Text(\"...Loading!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 24,\r\n        fill: \"white\",\r\n        stroke: '#ff3300',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#000000\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    SpinnerLoading.anchor.set(0.5);\r\n    SpinnerLoading.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    loadingScene.addChild(SpinnerLoading)\r\n\r\n    return loadingScene;\r\n\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n\r\n\r\nexport const gameSceneInit = () => {\r\n    const gameScene = new PIXI.Container()\r\n    const bg = new PIXI.Sprite.from(\"background\");\r\n    bg.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    bg.anchor.set(0.5);\r\n    gameScene.addChild(bg)\r\n    return gameScene\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//Game Scene Control initialize\r\nexport const buttonPlayInit = (buttonPlayTexture) => {\r\n    const buttonPlay = new PIXI.Sprite(buttonPlayTexture[0]);\r\n    buttonPlay.position.set(app.screen.width - 250, app.screen.height / 2);\r\n    buttonPlay.anchor.set(0.5);\r\n    buttonPlay.interactive = true;\r\n    buttonPlay.buttonMode = true;\r\n    return buttonPlay\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\nexport const creditsPanel = (credits, winSalary) => {\r\n\r\n\r\n    const panelContainer = new PIXI.Container()\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0xBF6730, 1);\r\n    Box.beginFill(0x061639, 1);\r\n    Box.drawRoundedRect(0, 0, 200, 150);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    panelContainer.addChild(Box)\r\n\r\n    let creditsText = new PIXI.Text(`MONEY: ${credits}$`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 16,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    creditsText.anchor.set(0.5);\r\n    creditsText.position.set(-20, -30);\r\n    panelContainer.addChild(creditsText)\r\n\r\n    let winSalaryText = new PIXI.Text(`WIN: ${winSalary}$`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 16,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    winSalaryText.anchor.set(0.5);\r\n    winSalaryText.position.set(-47, -5);\r\n    panelContainer.addChild(winSalaryText)\r\n\r\n\r\n    return panelContainer\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//Win Scene initialize\r\nexport const winSceneInit = () => {\r\n    const winScene = new PIXI.Container()\r\n\r\n    //background panel\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0x061639, 1);\r\n    Box.beginFill(0x061639, 0.45);\r\n    Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    winScene.addChild(Box)\r\n\r\n    //text info You Won\r\n    const winText = new PIXI.Text(\"YOU WON!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"yellow\",\r\n        stroke: 'black',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    winText.anchor.set(0.5);\r\n    winText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    winScene.addChild(winText)\r\n\r\n    let winSalaryText = new PIXI.Text(`WIN`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    winSalaryText.anchor.set(0.5);\r\n    winSalaryText.position.set(app.screen.width / 2, app.screen.height / 2 + 50);\r\n    winScene.addChild(winSalaryText)\r\n\r\n    return winScene\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//interactive display button fullscreen\r\nexport const buttonNextPlayInit = () => {\r\n    const buttonNextPlay = new PIXI.Graphics();\r\n    buttonNextPlay.beginFill(0x061639, 0.1);\r\n    buttonNextPlay.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n    buttonNextPlay.pivot.set(buttonNextPlay.width / 2, buttonNextPlay.height / 2)\r\n    buttonNextPlay.endFill();\r\n    buttonNextPlay.interactive = true;\r\n    buttonNextPlay.buttonMode = true;\r\n    return buttonNextPlay\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\nexport const gameOverSceneInit = () => {\r\n    const gameOverScene = new PIXI.Container()\r\n\r\n    //background panel\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0xFF00FF, 1);\r\n    Box.beginFill(0x650A5A, 0.45);\r\n    Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    gameOverScene.addChild(Box)\r\n\r\n    //text info You Lost\r\n    const losText = new PIXI.Text(\"YOU LOST!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"red\",\r\n        stroke: 'black',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    losText.anchor.set(0.5);\r\n    losText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    gameOverScene.addChild(losText)\r\n\r\n    return gameOverScene\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//interactive display button fullscreen\r\nexport const buttonNewGameInit = () => {\r\n    const buttonNewGame = new PIXI.Graphics();\r\n    buttonNewGame.beginFill(0x061639, 0.1);\r\n    buttonNewGame.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n    buttonNewGame.pivot.set(buttonNewGame.width / 2, buttonNewGame.height / 2)\r\n    buttonNewGame.endFill();\r\n    buttonNewGame.interactive = true;\r\n    buttonNewGame.buttonMode = true;\r\n    return buttonNewGame\r\n}\r\n","export const generateRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min","\r\nexport const checkPlayResult = (gameCombo) => {\r\n    let win = false\r\n    let loss = false\r\n    let resultLineItem = [];\r\n    const wildSymbolId = 0;\r\n\r\n    const checkALine = () => {\r\n        if (win) {\r\n            return\r\n        }\r\n        let resultCheckWild = gameCombo.a.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.a[i];\r\n\r\n            let resultCheckArbitrary = gameCombo.a.filter(item => item.itemId === checkSymbol.itemId)\r\n\r\n\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                console.log('You Loss')\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.a]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a]\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkBLine = () => {\r\n        if (win) {\r\n            return\r\n        }\r\n        let resultCheckWild = gameCombo.b.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.b[i];\r\n            let resultCheckArbitrary = gameCombo.b.filter(item => item.itemId === checkSymbol.itemId)\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                console.log('You Loss')\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.b]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b]\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkCLine = () => {\r\n        if (win) {\r\n            return\r\n        }\r\n        let resultCheckWild = gameCombo.c.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.c[i];\r\n            let resultCheckArbitrary = gameCombo.c.filter(item => item.itemId === checkSymbol.itemId)\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                console.log('You Loss')\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.c]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c]\r\n                return\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    checkALine()\r\n    checkBLine()\r\n    checkCLine()\r\n\r\n    return {\r\n        win,\r\n        loss,\r\n        resultLineItem,\r\n    }\r\n\r\n}","module.exports = __webpack_public_path__ + \"assets/BTN_Spin.png\";","module.exports = __webpack_public_path__ + \"assets/BG.png\";","module.exports = __webpack_public_path__ + \"assets/SYM6.png\";","module.exports = __webpack_public_path__ + \"assets/SYM4.png\";","module.exports = __webpack_public_path__ + \"assets/SYM1.png\";"],"sourceRoot":""}