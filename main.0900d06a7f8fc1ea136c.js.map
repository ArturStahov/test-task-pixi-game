{"version":3,"sources":["webpack:///./assets/assets.png","webpack:///./assets/sound/runPlay.mp3","webpack:///./assets/assets.json","webpack:///./assets/sound/won.mp3","webpack:///./assets/sound/click.mp3","webpack:///./assets/sound/Sound_fon.mp3","webpack:///./app.js","webpack:///./js/scenes/GameScene/animationReel.js","webpack:///./js/logics/generateRandomInt.js","webpack:///./js/scenes/GameScene/createRandomGameArea.js","webpack:///./index.js","webpack:///./js/scenes/LoadingScene/loadingScene.js","webpack:///./js/scenes/GameScene/gameScene.js","webpack:///./js/scenes/GameScene/buttonPlay.js","webpack:///./js/scenes/GameScene/creditsPanel.js","webpack:///./js/scenes/WinScene/winScene.js","webpack:///./js/scenes/WinScene/buttonNextPlay.js","webpack:///./js/scenes/GameOverScene/gameOverScene.js","webpack:///./js/scenes/GameOverScene/buttonNewGame.js","webpack:///./js/scenes/GameScene/areaForAnimation.js","webpack:///./js/logics/checkPlayResult.js"],"names":["module","exports","window","__PIXI_INSPECTOR_GLOBAL_HOOK__","register","PIXI","app","transparent","resolution","devicePixelRatio","renderer","backgroundColor","view","style","position","display","autoResize","resize","innerWidth","innerHeight","width","height","filterBlur","BlurFilter","generateRandomInt","min","max","Math","floor","random","createRandomGameArea","gameItemsArr","gameAreaContainer","gameCombo","a","b","c","i","rowContainer","x","addChild","j","randomItemId","length","symbolContainer","symbol","from","itemSkin","y","scale","anchor","set","round","SYMBOL_SIZE","ItemObj","itemId","itemSymbol","push","console","log","document","body","appendChild","loaders","TextureCache","add","load","buttonPlayTexture","timePlay","timeWinView","credits","loadingSceneContainer","SpinnerLoading","fontFamily","fontSize","fill","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","PI","dropShadowDistance","screen","loadingScene","stage","gameSceneContainer","bg","pivot","gameScene","buttonPlay","interactive","buttonMode","on","handlerClickPlay","creditsPanelContainer","creditsPanel","winSalary","Box","lineStyle","beginFill","drawRoundedRect","endFill","creditsText","winSalaryText","creditsPanelInit","winScene","winSceneContainer","winText","winSceneInit","buttonNextPlay","buttonFigure","drawRect","handlerClickNextPlay","gameOverScene","gameOverSceneContainer","losText","gameOverSceneInit","buttonNewGame","buttonNewGameInit","handlerClickNewGame","gameAreaObj","gameAreaForAnimation","gameAreaAnimationContainer","arrayItemsForAnim","row","symbols","areaForAnimation","animationReelsContainer","filters","gsap","to","duration","ease","modifiers","utils","unitize","parseFloat","repeat","animationsReels","visible","state","play","ticker","delta","gameLoop","soundWin","Audio","soundsWin","soundClick","soundsClick","soundsPlay","soundPlay","soundsFon","soundFon","filterGlow","GlowFilter","innerStrength","outerStrength","color","timeLoadingGame","isLoadingGame","targetClick","targetWin","text","eventViewGameOver","texture","removeChild","loop","eventPreloadingGame","spinResult","win","loss","resultLineItem","resultCheckWild","some","item","checkSymbol","resultCheckArbitrary","filter","checkALine","checkBLine","checkCLine","checkPlayResult","pause","currentTime","forEach","children","WIN_PRIZE","groupSpinEvents"],"mappings":"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","file":"main.0900d06a7f8fc1ea136c.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/assets.png\";","export default __webpack_public_path__ + \"static/media/runPlay.563738c7.mp3\";","export default __webpack_public_path__ + \"assets/assets.json\";","export default __webpack_public_path__ + \"static/media/won.01408a5f.mp3\";","export default __webpack_public_path__ + \"static/media/click.747cc046.mp3\";","export default __webpack_public_path__ + \"static/media/Sound_fon.9f887eb4.mp3\";","import * as PIXI from 'pixi.js'\r\n\r\nfunction registerPixiInspector() {\r\n    window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\r\n}\r\nregisterPixiInspector();\r\nconst app = new PIXI.Application({\r\n    transparent: false,\r\n    resolution: window.devicePixelRatio,\r\n\r\n});\r\n\r\napp.renderer.backgroundColor = 0x000000;\r\napp.renderer.view.style.position = \"absolute\";\r\napp.renderer.view.style.display = \"block\";\r\napp.renderer.autoResize = true;\r\napp.renderer.resize(window.innerWidth, window.innerHeight);\r\n\r\napp.view.style.width = window.innerWidth + \"px\";\r\napp.view.style.height = window.innerHeight + \"px\";\r\n\r\nexport default app\r\n\r\n","import * as PIXI from 'pixi.js';\r\nimport gsap from 'gsap';\r\n\r\n\r\nconst filterBlur = new PIXI.filters.BlurFilter(0.8, 0.9, 0.6);\r\n\r\n\r\n/**\r\n * function create animation and play her\r\n * @param {Array} arrayItemsForAnim it's array with objects game rows with symbols for animation\r\n */\r\n\r\nexport const animationsReels = (arrayItemsForAnim) => {\r\n    for (let i = 0; i < 3; i += 1) {\r\n        arrayItemsForAnim[i].symbols[0].filters = [filterBlur];\r\n        arrayItemsForAnim[i].symbols[2].filters = [filterBlur];\r\n        arrayItemsForAnim[i].symbols[5].filters = [filterBlur];\r\n\r\n        gsap.to(arrayItemsForAnim[i].symbols[0], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: 270,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 250), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[1], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 200), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[2], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[3], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[4], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n        gsap.to(arrayItemsForAnim[i].symbols[5], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: 125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300), //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1,\r\n        });\r\n\r\n    }\r\n}","export const generateRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min","import * as PIXI from 'pixi.js';\r\nimport { generateRandomInt } from '../../logics/generateRandomInt';\r\n\r\n\r\n//width row\r\nconst ROW_WIDTH = 250;\r\n//symbol size\r\nconst SYMBOL_SIZE = 200;\r\n\r\n/**\r\n * function create game area  \r\n * @param {Array} gameItemsArr it's array all game items\r\n * @returns object with gameAreaContainer: pixi container with game row reels for view, \r\n * gameCombo: object with results create game area conversion in column(array with symbols) for check results\r\n */\r\nexport const createRandomGameArea = (gameItemsArr) => {\r\n    const gameAreaContainer = new PIXI.Container();\r\n\r\n    let gameCombo = {\r\n        a: [],\r\n        b: [],\r\n        c: [],\r\n    };\r\n\r\n    for (let i = 0; i < 3; i += 1) {\r\n        const rowContainer = new PIXI.Container();\r\n        rowContainer.x = i * ROW_WIDTH * 1.5;\r\n        gameAreaContainer.addChild(rowContainer);\r\n\r\n        for (let j = 0; j < 3; j += 1) {\r\n            let randomItemId = generateRandomInt(0, gameItemsArr.length - 1);\r\n            const symbolContainer = new PIXI.Container();\r\n            const symbol = new PIXI.Sprite.from(gameItemsArr[randomItemId].itemSkin);\r\n            symbol.y = 0;\r\n            symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n            symbol.x = 0;\r\n            symbol.anchor.set(0.5);\r\n            symbolContainer.addChild(symbol);\r\n            symbolContainer.y = j * SYMBOL_SIZE;\r\n            symbolContainer.x = Math.round(SYMBOL_SIZE / 2);\r\n\r\n            const ItemObj = {\r\n                itemId: randomItemId,\r\n                itemSymbol: symbolContainer,\r\n            }\r\n\r\n            rowContainer.addChild(symbolContainer);\r\n            switch (j) {\r\n                case 0:\r\n                    gameCombo.a.push(ItemObj);\r\n                    break;\r\n                case 1:\r\n                    gameCombo.b.push(ItemObj);\r\n                    break;\r\n                case 2:\r\n                    gameCombo.c.push(ItemObj);\r\n                    break;\r\n                default: console.log(\"error value\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    return { gameAreaContainer, gameCombo };\r\n}\r\n\r\n","import * as PIXI from 'pixi.js';\r\nimport { GlowFilter } from 'pixi-filters';\r\nimport './base.css';\r\nimport './assets/assets.json';\r\nimport './assets/assets.png';\r\nimport soundPlay from './assets/sound/runPlay.mp3';\r\nimport soundsWin from './assets/sound/won.mp3';\r\nimport soundsClick from './assets/sound/click.mp3';\r\nimport soundFon from './assets/sound/Sound_fon.mp3';\r\nimport app from './app';\r\nimport { loadingSceneInit } from './js/scenes/LoadingScene';\r\nimport { winSceneInit } from './js/scenes/WinScene';\r\nimport { buttonNextPlayInit } from './js/scenes/WinScene';\r\nimport { gameSceneInit } from './js/scenes/GameScene';\r\nimport { buttonPlayInit } from './js/scenes/GameScene';\r\nimport { creditsPanelInit } from './js/scenes/GameScene';\r\nimport { animationsReels } from './js/scenes/GameScene';\r\nimport { gameOverSceneInit } from './js/scenes/GameOverScene';\r\nimport { checkPlayResult } from './js/logics/checkPlayResult';\r\nimport { createRandomGameArea } from './js/scenes/GameScene';\r\nimport { buttonNewGameInit } from './js/scenes/GameOverScene';\r\nimport { areaForAnimation } from './js/scenes/GameScene';\r\n\r\ndocument.body.appendChild(app.view);\r\n\r\n//alias\r\nconst loaders = new PIXI.Loader(),\r\n    TextureCache = PIXI.utils.TextureCache;\r\n\r\n\r\n//load all resources \r\nloaders\r\n    .add(\"./assets/assets.json\")\r\n    .load(setup);\r\n\r\n//sounds\r\nlet soundWin = new Audio(soundsWin);\r\nlet soundClick = new Audio(soundsClick);\r\nlet soundsPlay = new Audio(soundPlay);\r\nlet soundsFon = new Audio(soundFon);\r\n\r\n//game settings \r\nconst INITIAL_CREDITS = 1000;\r\nconst INITIAL_TIME_PLAY = 300;\r\nconst INITIAL_TIME_WIN = 300;\r\nconst WIN_PRIZE = 10;\r\nconst SPINS_PRICE = 5;\r\nconst filterGlow = new GlowFilter({ innerStrength: 3, outerStrength: 10, color: 0xffffff });\r\n\r\n//scens\r\nlet state;\r\nlet gameScene;\r\nlet loadingScene;\r\nlet winScene;\r\nlet gameOverScene;\r\nlet animationReelsContainer;\r\n\r\nlet buttonPlay;\r\nlet buttonPlayTexture;\r\nlet creditsPanel;\r\nlet timePlay;\r\nlet timeWinView;\r\nlet gameAreaObj;\r\nlet credits;\r\nlet winSalary = 0;\r\nlet timeLoadingGame = 100;\r\nlet isLoadingGame = true;\r\nlet targetClick = false;\r\nlet targetWin = false;\r\nlet gameItemsArr = null;\r\n\r\n\r\n\r\nfunction setup() {\r\n\r\n    //all game item\r\n    gameItemsArr = [\r\n        { itemId: 0, itemSkin: TextureCache[\"SYM1.png\"] },\r\n        { itemId: 1, itemSkin: TextureCache[\"SYM2.png\"] },\r\n        { itemId: 2, itemSkin: TextureCache[\"SYM3.png\"] },\r\n        { itemId: 3, itemSkin: TextureCache[\"SYM4.png\"] },\r\n        { itemId: 4, itemSkin: TextureCache[\"SYM5.png\"] },\r\n        { itemId: 5, itemSkin: TextureCache[\"SYM6.png\"] },\r\n    ];\r\n\r\n    //button Play texture\r\n    buttonPlayTexture = [\r\n        TextureCache[\"BTN_Spin.png\"],\r\n        TextureCache[\"BTN_Spin_d.png\"],\r\n    ];\r\n\r\n    //initialize timer\r\n    timePlay = INITIAL_TIME_PLAY;\r\n    timeWinView = INITIAL_TIME_WIN;\r\n\r\n    //initialize start credits\r\n    credits = INITIAL_CREDITS;\r\n\r\n    //Loading Scene initialize\r\n    loadingScene = loadingSceneInit();\r\n    app.stage.addChild(loadingScene);\r\n\r\n    //Game Scene initialize\r\n    gameScene = gameSceneInit();\r\n    buttonPlay = buttonPlayInit(buttonPlayTexture);\r\n    buttonPlay.on('pointerdown', handlerClickPlay);\r\n    gameScene.addChild(buttonPlay);\r\n    creditsPanel = creditsPanelInit(credits, winSalary);\r\n    const { creditsPanelContainer } = creditsPanel;\r\n    creditsPanelContainer.x = app.screen.width - 135;\r\n    creditsPanelContainer.y = app.screen.height - 200;\r\n    gameScene.addChild(creditsPanelContainer);\r\n    app.stage.addChild(gameScene);\r\n\r\n    //Win Scene initialize\r\n    winScene = winSceneInit();\r\n    const buttonNextPlay = buttonNextPlayInit();\r\n    buttonNextPlay.on('pointerdown', handlerClickNextPlay);\r\n    winScene.addChild(buttonNextPlay);\r\n    app.stage.addChild(winScene);\r\n\r\n    //Game Over scene init\r\n    gameOverScene = gameOverSceneInit();\r\n    const buttonNewGame = buttonNewGameInit();\r\n    buttonNewGame.on('pointerdown', handlerClickNewGame);\r\n    gameOverScene.addChild(buttonNewGame);\r\n    app.stage.addChild(gameOverScene);\r\n\r\n    //init  game area\r\n    //create random area\r\n    gameAreaObj = createRandomGameArea(gameItemsArr);\r\n    const { gameAreaContainer } = gameAreaObj;\r\n    gameAreaContainer.y = app.screen.height / 2;\r\n    gameAreaContainer.x = app.screen.width / 2 - 100;\r\n    gameAreaContainer.pivot.set(gameAreaContainer.width / 2, gameAreaContainer.height / 2);\r\n    gameScene.addChild(gameAreaContainer);\r\n\r\n    // create animation area\r\n    const gameAreaForAnimation = areaForAnimation(gameItemsArr);\r\n    const { gameAreaAnimationContainer, arrayItemsForAnim } = gameAreaForAnimation;\r\n    animationReelsContainer = gameAreaAnimationContainer;\r\n    animationReelsContainer.y = app.screen.height - 100;\r\n    animationReelsContainer.x = (app.screen.width / 2) - 100;\r\n    animationReelsContainer.pivot.set(animationReelsContainer.width / 2, animationReelsContainer.height / 2);\r\n\r\n    //create animation\r\n    animationsReels(arrayItemsForAnim);\r\n    gameScene.addChild(animationReelsContainer);\r\n\r\n    //view game scene property\r\n    gameAreaContainer.visible = true;\r\n    animationReelsContainer.visible = false;\r\n    loadingScene.visible = true;\r\n    gameScene.visible = false;\r\n    winScene.visible = false;\r\n    gameOverScene.visible = false;\r\n\r\n    state = play;\r\n    app.ticker.add(delta => gameLoop(delta));\r\n}\r\n\r\n\r\n//NextPlay button Win Scene handler\r\nfunction handlerClickNextPlay() {\r\n    targetWin = false;\r\n    winScene.visible = false;\r\n    timeWinView = INITIAL_TIME_WIN;\r\n}\r\n\r\n//New Game button handler\r\nfunction handlerClickNewGame() {\r\n    gameOverScene.visible = false;\r\n    credits = INITIAL_CREDITS;\r\n    winSalary = 0;\r\n    let { winSalaryText, creditsText } = creditsPanel;\r\n    creditsText.text = `MONEY: ${credits}$`;\r\n    winSalaryText.text = `WIN: ${winSalary}$`;\r\n}\r\n\r\n//game event preloading event\r\nfunction eventPreloadingGame() {\r\n    if (isLoadingGame) {\r\n        timeLoadingGame -= 1;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    if (timeLoadingGame == 0) {\r\n        isLoadingGame = false;\r\n        loadingScene.visible = false;\r\n        gameScene.visible = true;\r\n        return;\r\n    }\r\n}\r\n\r\n//Game Over event\r\nfunction eventViewGameOver() {\r\n    gameOverScene.visible = true;\r\n}\r\n\r\n//Game Win event\r\nfunction eventViewGameWin() {\r\n    winScene.visible = true;\r\n}\r\n\r\n//button Play handler\r\nfunction handlerClickPlay() {\r\n    if (!targetClick) {\r\n        if (!credits) {\r\n            eventViewGameOver();\r\n            return;\r\n        }\r\n        targetClick = true;\r\n        timePlay = INITIAL_TIME_PLAY;\r\n        buttonPlay.texture = buttonPlayTexture[1];\r\n        credits -= SPINS_PRICE;\r\n\r\n        let { creditsText } = creditsPanel;\r\n        creditsText.text = `MONEY: ${credits}$`;\r\n\r\n        if (credits < 1000) {\r\n            creditsText.position.set(-26, -30);\r\n        }\r\n\r\n        gameScene.removeChild(gameAreaObj.gameAreaContainer);\r\n        gameAreaObj = createRandomGameArea(gameItemsArr);\r\n        const { gameAreaContainer } = gameAreaObj;\r\n        gameAreaContainer.y = app.screen.height / 2;\r\n        gameAreaContainer.x = (app.screen.width / 2) - 100;\r\n        gameAreaContainer.pivot.set(gameAreaContainer.width / 2, gameAreaContainer.height / 2);\r\n        gameScene.addChild(gameAreaContainer);\r\n\r\n        gameAreaContainer.visible = false;\r\n        animationReelsContainer.visible = true;\r\n\r\n        soundClick.play();\r\n        soundsPlay.play();\r\n        soundsFon.play();\r\n        soundsFon.loop = true;\r\n    }\r\n}\r\n\r\n\r\nfunction gameLoop(delta) {\r\n    state(delta);\r\n}\r\n\r\nfunction play() {\r\n    eventPreloadingGame();\r\n\r\n    groupSpinEvents();\r\n\r\n    winAutoHidden();\r\n}\r\n\r\n//start spin timer and run game events\r\nfunction groupSpinEvents() {\r\n    if (targetClick) {\r\n        timePlay -= 1;\r\n\r\n        if (timePlay == 0) {\r\n            targetClick = false;\r\n            buttonPlay.texture = buttonPlayTexture[0];\r\n            animationReelsContainer.visible = false;\r\n            const { gameAreaContainer, gameCombo } = gameAreaObj\r\n            gameAreaContainer.visible = true;\r\n            const spinResult = checkPlayResult(gameCombo);\r\n            const { win, loss, resultLineItem } = spinResult;\r\n            soundsPlay.pause();\r\n            soundsPlay.currentTime = 0;\r\n\r\n            let { winSalaryText, creditsText } = creditsPanel;\r\n\r\n            if (win) {\r\n                resultLineItem.forEach(item => item.itemSymbol.children[0].filters = [filterGlow]);\r\n                eventViewGameWin();\r\n                credits += WIN_PRIZE;\r\n                winSalary += WIN_PRIZE;\r\n                creditsText.text = `MONEY: ${credits}$`;\r\n                winSalaryText.text = `WIN: ${winSalary}$`;\r\n                winScene.children[2].text = `${WIN_PRIZE}$`;\r\n                targetWin = true;\r\n                soundWin.play();\r\n                return;\r\n            }\r\n            if (loss) {\r\n                eventViewGameOver();\r\n                resultLineItem.forEach(item => item.itemSymbol.children[0].filters = [filterGlow]);\r\n                credits = 0;\r\n                creditsText.text = `MONEY: ${credits}$`;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//start  win timer and auto hidden win scenes \r\nfunction winAutoHidden() {\r\n    if (targetWin) {\r\n        timeWinView -= 1;\r\n        if (timeWinView == 0) {\r\n            targetWin = false;\r\n            winScene.visible = false;\r\n            timeWinView = INITIAL_TIME_WIN;\r\n        }\r\n    }\r\n}","import * as PIXI from 'pixi.js';\r\nimport app from '../../../app';\r\n//loading Scene initialize\r\nexport const loadingSceneInit = () => {\r\n    const loadingSceneContainer = new PIXI.Container();\r\n    const SpinnerLoading = new PIXI.Text(\"...Loading!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 24,\r\n        fill: \"white\",\r\n        stroke: '#ff3300',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#000000\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    SpinnerLoading.anchor.set(0.5);\r\n    SpinnerLoading.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    loadingSceneContainer.addChild(SpinnerLoading);\r\n\r\n    return loadingSceneContainer;\r\n}\r\n\r\n","import * as PIXI from 'pixi.js';\r\nimport app from '../../../app';\r\n\r\n\r\n//init game scene\r\nexport const gameSceneInit = () => {\r\n    const gameSceneContainer = new PIXI.Container();\r\n    const bg = new PIXI.Sprite.from(PIXI.utils.TextureCache[\"BG.png\"]);\r\n    bg.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    bg.anchor.set(0.5);\r\n    bg.scale.x = Math.min(app.screen.width / bg.width);\r\n    bg.scale.y = Math.min(app.screen.height / bg.height);\r\n    gameSceneContainer.addChild(bg);\r\n\r\n    gameSceneContainer.width = app.screen.width;\r\n    gameSceneContainer.height = app.screen.height;\r\n    gameSceneContainer.x = app.screen.width / 2;\r\n    gameSceneContainer.y = app.screen.height / 2;\r\n    gameSceneContainer.pivot.set(app.screen.width / 2, app.screen.height / 2);\r\n    return gameSceneContainer;\r\n}","import * as PIXI from 'pixi.js';\r\nimport app from '../../../app';\r\n\r\n//Game Scene Control initialize\r\nexport const buttonPlayInit = (buttonPlayTexture) => {\r\n    const buttonPlay = new PIXI.Sprite(buttonPlayTexture[0]);\r\n    buttonPlay.position.set(app.screen.width - 130, app.screen.height / 2);\r\n    buttonPlay.anchor.set(0.5);\r\n    buttonPlay.interactive = true;\r\n    buttonPlay.buttonMode = true;\r\n    return buttonPlay;\r\n}\r\n","import * as PIXI from 'pixi.js';\r\n\r\n\r\n//init panel user credits coins\r\nexport const creditsPanelInit = (credits, winSalary) => {\r\n    const creditsPanelContainer = new PIXI.Container();\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0xBF6730, 1);\r\n    Box.beginFill(0x061639, 1);\r\n    Box.drawRoundedRect(0, 0, 200, 150);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2);\r\n    Box.endFill();\r\n    creditsPanelContainer.addChild(Box);\r\n\r\n    let creditsText = new PIXI.Text(`MONEY: ${credits}$`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 16,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    creditsText.anchor.set(0.5);\r\n    creditsText.position.set(-20, -30);\r\n    creditsPanelContainer.addChild(creditsText);\r\n\r\n    let winSalaryText = new PIXI.Text(`WIN: ${winSalary}$`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 16,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    winSalaryText.anchor.set(0.5);\r\n    winSalaryText.position.set(-47, -5);\r\n    creditsPanelContainer.addChild(winSalaryText);\r\n\r\n    return { creditsPanelContainer, winSalaryText, creditsText };\r\n}","import * as PIXI from 'pixi.js';\r\nimport app from '../../../app';\r\n\r\n//Win Scene initialize\r\nexport const winSceneInit = () => {\r\n    const winSceneContainer = new PIXI.Container();\r\n    //background panel\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0x061639, 1);\r\n    Box.beginFill(0x061639, 0.45);\r\n    Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2);\r\n    Box.endFill();\r\n    winSceneContainer.addChild(Box);\r\n\r\n    //text info You Won\r\n    const winText = new PIXI.Text(\"YOU WON!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"yellow\",\r\n        stroke: 'black',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    winText.anchor.set(0.5);\r\n    winText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    winSceneContainer.addChild(winText);\r\n\r\n    let winSalaryText = new PIXI.Text(`WIN`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    winSalaryText.anchor.set(0.5);\r\n    winSalaryText.position.set(app.screen.width / 2, app.screen.height / 2 + 50);\r\n    winSceneContainer.addChild(winSalaryText);\r\n\r\n    return winSceneContainer;\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//interactive display button fullscreen\r\nexport const buttonNextPlayInit = () => {\r\n    const buttonFigure = new PIXI.Graphics();\r\n    buttonFigure.beginFill(0x061639, 0.1);\r\n    buttonFigure.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n    buttonFigure.pivot.set(buttonFigure.width / 2, buttonFigure.height / 2);\r\n    buttonFigure.endFill();\r\n    buttonFigure.interactive = true;\r\n    buttonFigure.buttonMode = true;\r\n    return buttonFigure;\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\nexport const gameOverSceneInit = () => {\r\n    const gameOverSceneContainer = new PIXI.Container()\r\n\r\n    //background panel\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0xFF00FF, 1);\r\n    Box.beginFill(0x650A5A, 0.45);\r\n    Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    gameOverSceneContainer.addChild(Box)\r\n\r\n    //text info You Lost\r\n    const losText = new PIXI.Text(\"YOU LOST!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"red\",\r\n        stroke: 'black',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    losText.anchor.set(0.5);\r\n    losText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    gameOverSceneContainer.addChild(losText)\r\n\r\n    return gameOverSceneContainer\r\n}","import * as PIXI from 'pixi.js';\r\nimport app from '../../../app';\r\n\r\n//interactive display button fullscreen\r\nexport const buttonNewGameInit = () => {\r\n    const buttonFigure = new PIXI.Graphics();\r\n    buttonFigure.beginFill(0x061639, 0.1);\r\n    buttonFigure.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n    buttonFigure.pivot.set(buttonFigure.width / 2, buttonFigure.height / 2);\r\n    buttonFigure.endFill();\r\n    buttonFigure.interactive = true;\r\n    buttonFigure.buttonMode = true;\r\n    return buttonFigure;\r\n}\r\n","import * as PIXI from 'pixi.js';\r\n\r\nimport { generateRandomInt } from '../../logics/generateRandomInt';\r\n\r\n//width row\r\nconst ROW_WIDTH = 250;\r\n//symbol size\r\nconst SYMBOL_SIZE = 200;\r\n\r\n/**\r\n * function create game area for animation\r\n * @param {Array} gameItemsArr it's array all game items\r\n * @returns object with gameAreaAnimationContainer: pixi container, arrayItemsForAnim: array with results create game area(row with symbols)\r\n */\r\n\r\nexport const areaForAnimation = (gameItemsArr) => {\r\n    const gameAreaAnimationContainer = new PIXI.Container();\r\n    let arrayItemsForAnim = [];\r\n\r\n    for (let i = 0; i < 3; i += 1) {\r\n        const rowContainer = new PIXI.Container();\r\n        rowContainer.x = i * ROW_WIDTH * 1.5;\r\n        gameAreaAnimationContainer.addChild(rowContainer);\r\n        const row = {\r\n            symbols: [],\r\n        };\r\n\r\n        for (let j = 0; j < 6; j += 1) {\r\n            let randomItemId = generateRandomInt(0, gameItemsArr.length - 1);\r\n            const symbolContainer = new PIXI.Container();\r\n            const symbol = new PIXI.Sprite.from(gameItemsArr[randomItemId].itemSkin);\r\n            symbol.y = 0;\r\n            symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n            symbol.x = 0;\r\n            symbol.anchor.set(0.5);\r\n            symbolContainer.addChild(symbol);\r\n            symbolContainer.y = j * SYMBOL_SIZE;\r\n            symbolContainer.x = Math.round(SYMBOL_SIZE / 2);\r\n            row.symbols.push(symbolContainer);\r\n            rowContainer.addChild(symbolContainer);\r\n\r\n        }\r\n        arrayItemsForAnim.push(row);\r\n    }\r\n    return { gameAreaAnimationContainer, arrayItemsForAnim };\r\n}\r\n\r\n","/**\r\n * \r\n * @param {object} gameCombo it result for create game area with line (array) items\r\n * @return {object} object with params result checking gameCombo.  \r\n *      win:bool,\r\n        loss:bool,\r\n        resultLineItem:array with win items,\r\n */\r\nexport const checkPlayResult = (gameCombo) => {\r\n    let win = false;\r\n    let loss = false;\r\n    let resultLineItem = [];\r\n    const wildSymbolId = 0;\r\n\r\n    checkALine();\r\n    checkBLine();\r\n    checkCLine();\r\n\r\n    //checking first game line(column)\r\n    function checkALine() {\r\n        if (win) {\r\n            return;\r\n        }\r\n        let resultCheckWild = gameCombo.a.some(item => item.itemId === wildSymbolId);\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.a[i];\r\n            let resultCheckArbitrary = gameCombo.a.filter(item => item.itemId === checkSymbol.itemId);\r\n\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.a];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a];\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    //checking second game line(column)\r\n    function checkBLine() {\r\n        if (win) {\r\n            return;\r\n        }\r\n        let resultCheckWild = gameCombo.b.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.b[i];\r\n            let resultCheckArbitrary = gameCombo.b.filter(item => item.itemId === checkSymbol.itemId);\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.b];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b];\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    //checking third game line(column)\r\n    function checkCLine() {\r\n        if (win) {\r\n            return;\r\n        }\r\n        let resultCheckWild = gameCombo.c.some(item => item.itemId === wildSymbolId);\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.c[i];\r\n            let resultCheckArbitrary = gameCombo.c.filter(item => item.itemId === checkSymbol.itemId);\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.c];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c];\r\n                return;\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c];\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        win,\r\n        loss,\r\n        resultLineItem,\r\n    }\r\n\r\n}"],"sourceRoot":""}