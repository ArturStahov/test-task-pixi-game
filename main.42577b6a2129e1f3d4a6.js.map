{"version":3,"sources":["webpack:///./assets/assets.png","webpack:///./assets/BTN_Spin_d.png","webpack:///./assets/SYM3.png","webpack:///./assets/SYM5.png","webpack:///./assets/SYM2.png","webpack:///./assets/sound/runPlay.mp3","webpack:///./assets/assets.json","webpack:///./assets/sound/won.mp3","webpack:///./assets/sound/click.mp3","webpack:///./assets/sound/Sound_fon.mp3","webpack:///./app.js","webpack:///./js/scens/GameScene/AnimationGameArea.js","webpack:///./js/logics/createRandomGameArea.js","webpack:///./js/logics/generateRandomInt.js","webpack:///./index.js","webpack:///./js/scens/LoadingScene/loadingScene.js","webpack:///./js/scens/GameScene/gameScene.js","webpack:///./js/scens/GameScene/buttonPlay.js","webpack:///./js/scens/GameScene/creditsPanel.js","webpack:///./js/scens/WinScene/winScene.js","webpack:///./js/scens/WinScene/buttonNextPlay.js","webpack:///./js/scens/GameOverScene/gameOverScene.js","webpack:///./js/scens/GameOverScene/buttonNewGame.js","webpack:///./js/logics/checkPlayResult.js","webpack:///./assets/BTN_Spin.png","webpack:///./assets/BG.png","webpack:///./assets/SYM6.png","webpack:///./assets/SYM4.png","webpack:///./assets/SYM1.png"],"names":["module","exports","window","__PIXI_INSPECTOR_GLOBAL_HOOK__","register","PIXI","app","transparent","resolution","devicePixelRatio","renderer","backgroundColor","view","style","position","display","resize","innerWidth","innerHeight","width","height","filterBlur","BlurFilter","createRandomGameArea","gameItemsArr","min","max","gameAreaContainer","gameAreaResults","gameCombo","a","b","c","i","rowContainer","x","addChild","row","symbols","j","randomItemId","length","Math","floor","random","symbolContainer","symbol","from","itemSkin","y","scale","anchor","set","round","SYMBOL_SIZE","ItemObj","itemId","itemSymbol","push","console","log","document","body","appendChild","loaders","TextureCache","filterGlow","GlowFilter","innerStrength","outerStrength","color","add","load","buttonPlayTexture","timePlay","timeWinView","loadingScene","SpinnerLoading","fontFamily","fontSize","fill","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","PI","dropShadowDistance","screen","stage","gameScene","bg","pivot","buttonPlay","interactive","buttonMode","on","handlerClickPlay","creditsPanels","credits","winSalary","panelContainer","Box","lineStyle","beginFill","drawRoundedRect","endFill","creditsText","winSalaryText","creditsPanel","winScene","winText","winSceneInit","buttonNextPlay","drawRect","buttonNextPlayInit","handlerClickNextPlay","gameOverScene","losText","gameOverSceneInit","buttonNewGame","buttonNewGameInit","handlerClickNewGame","gameAreaObj","visible","state","play","ticker","delta","gameLoop","soundWin","Audio","soundsWin","soundClick","soundsClick","soundsPlay","soundPlay","soundsFon","soundFon","timeLoadingGame","isLoadingGame","targetClick","targetWin","roundResult","children","text","texture","resultLineItem","forEach","item","filters","gsap","to","duration","ease","modifiers","utils","unitize","parseFloat","repeat","AnimationsGameArea","loop","eventPreloadingGame","removeChild","win","loss","resultCheckWild","some","checkSymbol","resultCheckArbitrary","filter","checkALine","checkBLine","checkCLine","checkPlayResult","pause","currentTime","WIN_PRIZE"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,qB,uBCA3CD,EAAOC,QAAU,IAA0B,yB,uBCA3CD,EAAOC,QAAU,IAA0B,mB,uBCA3CD,EAAOC,QAAU,IAA0B,mB,qBCA3CD,EAAOC,QAAU,IAA0B,mB,gHCA5B,G,8GCAA,I,UDAA,IAA0B,qCEA1B,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,sCCGrCC,OAAOC,gCAAkCD,OAAOC,+BAA+BC,SAAS,CAAEC,KAAMA,IAGpG,IAAMC,EAAM,IAAID,cAAiB,CAC7BE,aAAa,EACbC,WAAYN,OAAOO,mBAIvBH,EAAII,SAASC,gBAAkB,EAC/BL,EAAII,SAASE,KAAKC,MAAMC,SAAW,WACnCR,EAAII,SAASE,KAAKC,MAAME,QAAU,QAClCT,EAAII,SAASM,OAAOd,OAAOe,WAAYf,OAAOgB,aAC9CZ,EAAIM,KAAKC,MAAMM,MAAQjB,OAAOe,WAAa,KAC3CX,EAAIM,KAAKC,MAAMO,OAASlB,OAAOgB,YAAc,KAE9BZ,Q,wBCjBTe,EAAa,IAAIhB,UAAaiB,WAAW,GAAK,GAAK,ICO5CC,G,8BAAuB,SAACC,GASjC,IARA,ICV8BC,EAAKC,EDU7BC,EAAoB,IAAItB,YAC1BuB,EAAkB,GAClBC,EAAY,CACZC,EAAG,GACHC,EAAG,GACHC,EAAG,IAGEC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC3B,IAAMC,EAAe,IAAI7B,YACzB6B,EAAaC,EAfH,IAeOF,EAAgB,IACjCN,EAAkBS,SAASF,GAK3B,IAJA,IAAMG,EAAM,CACRC,QAAS,IAGJC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC3B,IAAIC,GC3BkBf,ED2Be,EC3BVC,ED2BaF,EAAaiB,OAAS,EC3B3BC,KAAKC,MAAMD,KAAKE,UAAYlB,EAAMD,EAAM,IAAMA,GD4B3EoB,EAAkB,IAAIxC,YACtByC,EAAS,IAAIzC,SAAY0C,KAAKvB,EAAagB,GAAcQ,UAC/DF,EAAOG,EAAI,EACXH,EAAOI,MAAMf,EAAIW,EAAOI,MAAMD,EAAIP,KAAKjB,IAzB/B,IAyBiDqB,EAAO3B,MAzBxD,IAyB6E2B,EAAO1B,QAC5F0B,EAAOX,EAAI,EACXW,EAAOK,OAAOC,IAAI,IAClBP,EAAgBT,SAASU,GACzBD,EAAgBI,EA7BR,IA6BYV,EACpBM,EAAgBV,EAAIO,KAAKW,MAAMC,IAE/B,IAAMC,EAAU,CACZC,OAAQhB,EACRiB,WAAYZ,GAIhB,OAFAR,EAAIC,QAAQoB,KAAKb,GACjBX,EAAaE,SAASS,GACdN,GACJ,KAAK,EACDV,EAAUC,EAAE4B,KAAKH,GACjB,MACJ,KAAK,EACD1B,EAAUE,EAAE2B,KAAKH,GACjB,MACJ,KAAK,EACD1B,EAAUG,EAAE0B,KAAKH,GACjB,MACJ,QAASI,QAAQC,IAAI,gBAK7BhC,EAAgB8B,KAAKrB,GAEzB,MAAO,CAAEV,oBAAmBC,kBAAiBC,eE7BjDgC,SAASC,KAAKC,YAAYzD,EAAIM,MAG9B,IAAMoD,EAAU,IAAI3D,SAChB4D,EAAe5D,QAAW4D,aAC1BC,EAAa,IAAIC,IAAW,CAAEC,cAAe,EAAGC,cAAe,GAAIC,MAAO,WAG9EN,EACKO,IAAI,wBACJC,MAsCL,WAGIhD,EAAe,CACX,CAAEgC,OAAQ,EAAGR,SAAUiB,EAAa,aACpC,CAAET,OAAQ,EAAGR,SAAUiB,EAAa,aACpC,CAAET,OAAQ,EAAGR,SAAUiB,EAAa,aACpC,CAAET,OAAQ,EAAGR,SAAUiB,EAAa,aACpC,CAAET,OAAQ,EAAGR,SAAUiB,EAAa,aACpC,CAAET,OAAQ,EAAGR,SAAUiB,EAAa,cAIxCQ,EAAoB,CAChBR,EAAa,gBACbA,EAAa,mBAIjBS,EAhDsB,IAiDtBC,EAhDqB,IChDfC,EAAe,IAAIvE,YACnBwE,EAAiB,IAAIxE,OAAU,cAAe,CAChDyE,WAAY,QACZC,SAAU,GACVC,KAAM,QACNC,OAAQ,UACRC,gBAAiB,EACjBC,YAAY,EACZC,gBAAiB,UACjBC,eAAgB,EAChBC,gBAAiB5C,KAAK6C,GAAK,EAC3BC,mBAAoB,IAExBX,EAAe1B,OAAOC,IAAI,IAC1ByB,EAAe/D,SAASsC,IAAI9C,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,GACtEwD,EAAaxC,SAASyC,GDoFtBD,EClFOA,EDmFPtE,EAAIoF,MAAMtD,SAASwC,GElGbe,EAAY,IAAItF,YAGhBuF,EAAK,IAAIvF,SAAY0C,KAAK1C,QAAW4D,aAAa,WACxD2B,EAAG9E,SAASsC,IAAI9C,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,GAC1DwE,EAAGzC,OAAOC,IAAI,IACdwC,EAAG1C,MAAMf,EAAIO,KAAKjB,IAAInB,EAAImF,OAAOtE,MAAQyE,EAAGzE,OAC5CyE,EAAG1C,MAAMD,EAAIP,KAAKjB,IAAInB,EAAImF,OAAOrE,OAASwE,EAAGxE,QAE7CuE,EAAUvD,SAASwD,GAEnBD,EAAUxE,MAAQb,EAAImF,OAAOtE,MAC7BwE,EAAUvE,OAASd,EAAImF,OAAOrE,OAC9BuE,EAAUxD,EAAI7B,EAAImF,OAAOtE,MAAQ,EACjCwE,EAAU1C,EAAI3C,EAAImF,OAAOrE,OAAS,EAClCuE,EAAUE,MAAMzC,IAAI9C,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,GFsF9DuE,EErFOA,GClBoBlB,EHwGCA,EGvGtBqB,EAAa,IAAIzF,SAAYoE,EAAkB,IACrDqB,EAAWhF,SAASsC,IAAI9C,EAAImF,OAAOtE,MAAQ,IAAKb,EAAImF,OAAOrE,OAAS,GACpE0E,EAAW3C,OAAOC,IAAI,IACtB0C,EAAWC,aAAc,EACzBD,EAAWE,YAAa,EHmGxBF,EGlGOA,GHmGIG,GAAG,cAAeC,GAC7BP,EAAUvD,SAAS0D,IACnBK,EI5GwB,SAACC,EAASC,GAClC,IAAMC,EAAiB,IAAIjG,YACrBkG,EAAM,IAAIlG,WAChBkG,EAAIC,UAAU,EAAG,SAAU,GAC3BD,EAAIE,UAAU,OAAU,GACxBF,EAAIG,gBAAgB,EAAG,EAAG,IAAK,KAC/BH,EAAIV,MAAMzC,IAAImD,EAAIpF,MAAQ,EAAGoF,EAAInF,OAAS,GAC1CmF,EAAII,UACJL,EAAelE,SAASmE,GAExB,IAAIK,EAAc,IAAIvG,OAAJ,UAAwB+F,EAAxB,IAAoC,CAClDtB,WAAY,QACZC,SAAU,GACVC,KAAM,SACNG,YAAY,EACZC,gBAAiB,UACjBC,eAAgB,EAChBC,gBAAiB5C,KAAK6C,GAAK,EAC3BC,mBAAoB,IAExBoB,EAAYzD,OAAOC,IAAI,IACvBwD,EAAY9F,SAASsC,KAAK,IAAK,IAC/BkD,EAAelE,SAASwE,GAExB,IAAIC,EAAgB,IAAIxG,OAAJ,QAAsBgG,EAAtB,IAAoC,CACpDvB,WAAY,QACZC,SAAU,GACVC,KAAM,SACNG,YAAY,EACZC,gBAAiB,UACjBC,eAAgB,EAChBC,gBAAiB5C,KAAK6C,GAAK,EAC3BC,mBAAoB,IAMxB,OAJAqB,EAAc1D,OAAOC,IAAI,IACzByD,EAAc/F,SAASsC,KAAK,IAAK,GACjCkD,EAAelE,SAASyE,GAEjBP,EJsESQ,CAAaV,EAASC,IACxBlE,EAAI7B,EAAImF,OAAOtE,MAAQ,IACrCgF,EAAclD,EAAI3C,EAAImF,OAAOrE,OAAS,IACtCuE,EAAUvD,SAAS+D,GACnB7F,EAAIoF,MAAMtD,SAASuD,GAGnBoB,EKlHwB,WACxB,IAAMA,EAAW,IAAI1G,YAEfkG,EAAM,IAAIlG,WAChBkG,EAAIC,UAAU,EAAG,OAAU,GAC3BD,EAAIE,UAAU,OAAU,KACxBF,EAAIG,gBAAgBpG,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,EAAGd,EAAImF,OAAOtE,MAAQb,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAASd,EAAImF,OAAOrE,OAAS,EAAG,IACrJmF,EAAIV,MAAMzC,IAAImD,EAAIpF,MAAQ,EAAGoF,EAAInF,OAAS,GAC1CmF,EAAII,UACJI,EAAS3E,SAASmE,GAGlB,IAAMS,EAAU,IAAI3G,OAAU,WAAY,CACtCyE,WAAY,QACZC,SAAU,GACVC,KAAM,SACNC,OAAQ,QACRC,gBAAiB,EACjBC,YAAY,EACZC,gBAAiB,UACjBC,eAAgB,EAChBC,gBAAiB5C,KAAK6C,GAAK,EAC3BC,mBAAoB,IAExBwB,EAAQ7D,OAAOC,IAAI,IACnB4D,EAAQlG,SAASsC,IAAI9C,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,GAC/D2F,EAAS3E,SAAS4E,GAElB,IAAIH,EAAgB,IAAIxG,OAAJ,MAAqB,CACrCyE,WAAY,QACZC,SAAU,GACVC,KAAM,SACNG,YAAY,EACZC,gBAAiB,UACjBC,eAAgB,EAChBC,gBAAiB5C,KAAK6C,GAAK,EAC3BC,mBAAoB,IAMxB,OAJAqB,EAAc1D,OAAOC,IAAI,IACzByD,EAAc/F,SAASsC,IAAI9C,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,EAAI,IACzE2F,EAAS3E,SAASyE,GAEXE,ELwEIE,GGlHe,IAACxC,EACrBqB,EDAmB,IACnBH,EAGAC,EDNsB,IACtBhB,EACAC,EDkHN,IAAMqC,EMnHwB,WAC9B,IAAMA,EAAiB,IAAI7G,WAO3B,OANA6G,EAAeT,UAAU,OAAU,IACnCS,EAAeC,SAAS7G,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,EAAGd,EAAImF,OAAOtE,MAAOb,EAAImF,OAAOrE,QAClG8F,EAAerB,MAAMzC,IAAI8D,EAAe/F,MAAQ,EAAG+F,EAAe9F,OAAS,GAC3E8F,EAAeP,UACfO,EAAenB,aAAc,EAC7BmB,EAAelB,YAAa,EACrBkB,EN2GgBE,GACvBF,EAAejB,GAAG,cAAeoB,GACjCN,EAAS3E,SAAS8E,GAClB5G,EAAIoF,MAAMtD,SAAS2E,GAGnBO,EO1H6B,WAC7B,IAAMA,EAAgB,IAAIjH,YAGpBkG,EAAM,IAAIlG,WAChBkG,EAAIC,UAAU,EAAG,SAAU,GAC3BD,EAAIE,UAAU,QAAU,KACxBF,EAAIG,gBAAgBpG,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,EAAGd,EAAImF,OAAOtE,MAAQb,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAASd,EAAImF,OAAOrE,OAAS,EAAG,IACrJmF,EAAIV,MAAMzC,IAAImD,EAAIpF,MAAQ,EAAGoF,EAAInF,OAAS,GAC1CmF,EAAII,UACJW,EAAclF,SAASmE,GAGvB,IAAMgB,EAAU,IAAIlH,OAAU,YAAa,CACvCyE,WAAY,QACZC,SAAU,GACVC,KAAM,MACNC,OAAQ,QACRC,gBAAiB,EACjBC,YAAY,EACZC,gBAAiB,UACjBC,eAAgB,EAChBC,gBAAiB5C,KAAK6C,GAAK,EAC3BC,mBAAoB,IAMxB,OAJA+B,EAAQpE,OAAOC,IAAI,IACnBmE,EAAQzG,SAASsC,IAAI9C,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,GAC/DkG,EAAclF,SAASmF,GAEhBD,EP6FSE,GAChB,IAAMC,EQ1HuB,WAC7B,IAAMA,EAAgB,IAAIpH,WAO1B,OANAoH,EAAchB,UAAU,OAAU,IAClCgB,EAAcN,SAAS7G,EAAImF,OAAOtE,MAAQ,EAAGb,EAAImF,OAAOrE,OAAS,EAAGd,EAAImF,OAAOtE,MAAOb,EAAImF,OAAOrE,QACjGqG,EAAc5B,MAAMzC,IAAIqE,EAActG,MAAQ,EAAGsG,EAAcrG,OAAS,GACxEqG,EAAcd,UACdc,EAAc1B,aAAc,EAC5B0B,EAAczB,YAAa,EACpByB,ERkHeC,GACtBD,EAAcxB,GAAG,cAAe0B,GAChCL,EAAclF,SAASqF,GACvBnH,EAAIoF,MAAMtD,SAASkF,GAGnBM,EAAcrG,EAAqBC,GACnCI,EAAkBgG,EAAYhG,gBArDjB,IAsDLD,EAAsBiG,EAAtBjG,kBACRA,EAAkBsB,EAAI3C,EAAImF,OAAOrE,OAAS,EAC1CO,EAAkBQ,EAAI7B,EAAImF,OAAOtE,MAAQ,EAAI,IAC7CQ,EAAkBkE,MAAMzC,IAAIzB,EAAkBR,MAAQ,EAAGQ,EAAkBP,OAAS,GACpFuE,EAAUvD,SAAST,GAGnBiD,EAAaiD,SAAU,EACvBlC,EAAUkC,SAAU,EACpBd,EAASc,SAAU,EACnBP,EAAcO,SAAU,EAExBC,EAAQC,EACRzH,EAAI0H,OAAOzD,KAAI,SAAA0D,GAAK,OAiExB,SAAkBA,GACdH,EAAMG,GAlEkBC,CAASD,SAtGrC,IAYIH,EACAnC,EACAf,EACAmC,EACAO,EAEAxB,EACArB,EACA0B,EACAzB,EACAC,EACAiD,EAvBAO,EAAW,IAAIC,MAAMC,GACrBC,EAAa,IAAIF,MAAMG,GACvBC,EAAa,IAAIJ,MAAMK,GACvBC,EAAY,IAAIN,MAAMO,GAqBtBvC,EAAU,IACVC,EAAY,EACZuC,EAAkB,GAClBC,GAAgB,EAChBC,GAAc,EACdC,GAAY,EACZvH,EAAe,GACfI,EAAkB,GAClBoH,EAAc,KA0ElB,IAAM3B,EAAuB,WACzB0B,GAAY,EACZhC,EAASc,SAAU,EACnBlD,EAtGqB,KA0GnBgD,EAAsB,WACxBL,EAAcO,SAAU,EACxBzB,EAAU,IACVC,EAAY,EACZF,EAAc8C,SAAS,GAAGC,KAA1B,UAA2C9C,EAA3C,IACAD,EAAc8C,SAAS,GAAGC,KAA1B,QAAyC7C,EAAzC,KAIEH,EAAmB,WAChB4C,IACDA,GAAc,EACdpE,EAvHkB,IAwHlBoB,EAAWqD,QAAU1E,EAAkB,GACvC2B,GAtHY,EAuHZD,EAAc8C,SAAS,GAAGC,KAA1B,UAA2C9C,EAA3C,IAEI4C,GAAeA,EAAYI,eAAe3G,OAAS,GACnDuG,EAAYI,eAAeC,SAAQ,SAAAC,GAAI,OAAIA,EAAK7F,WAAWwF,SAAS,GAAGM,QAAU,QH3K3D,SAAC3H,GAC/B,IAAK,IAAIK,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxBL,EAAgBK,GAAGK,QAAQ,GAAGiH,QAAU,CAAClI,GACzCO,EAAgBK,GAAGK,QAAQ,GAAGiH,QAAU,CAAClI,GACzCO,EAAgBK,GAAGK,QAAQ,GAAGiH,QAAU,CAAClI,GAEzCmI,IAAKC,GAAG7H,EAAgBK,GAAGK,QAAQ,GAAI,CACnCoH,SAAU,GACVC,KAAM,OACN1G,EAAG,IACH2G,UAAW,CACP3G,EAAGuG,IAAKK,MAAMC,SAAQ,SAAA7G,GAAC,OAAI8G,WAAW9G,GAAK,QAE/C+G,QAAS,IAEbR,IAAKC,GAAG7H,EAAgBK,GAAGK,QAAQ,GAAI,CACnCoH,SAAU,GACVC,KAAM,OACN1G,GAAI,GACJ2G,UAAW,CACP3G,EAAGuG,IAAKK,MAAMC,SAAQ,SAAA7G,GAAC,OAAI8G,WAAW9G,GAAK,QAE/C+G,QAAS,IAEbR,IAAKC,GAAG7H,EAAgBK,GAAGK,QAAQ,GAAI,CACnCoH,SAAU,GACVC,KAAM,OACN1G,GAAI,IACJ2G,UAAW,CACP3G,EAAGuG,IAAKK,MAAMC,SAAQ,SAAA7G,GAAC,OAAI8G,WAAW9G,GAAK,QAE/C+G,QAAS,IG+IbC,CAAmBrI,GACnB0G,EAAWP,OACXS,EAAWT,OACXW,EAAUX,OACVW,EAAUwB,MAAO,IAiCzB,SAASnC,IAGL,GA/BwB,WACxB,GAAIc,EAMmB,IALnBD,GAAmB,KAMnBC,GAAgB,EAChBjE,EAAaiD,SAAU,EACvBlC,EAAUkC,SAAU,GAmBxBsC,GAEIrB,GAGgB,IAFhBpE,GAAY,GAEO,CACfoE,GAAc,EACdhD,EAAWqD,QAAU1E,EAAkB,GACvCkB,EAAUyE,YAAYxC,EAAYjG,mBAElCiG,EAAcrG,EAAqBC,GACnCI,EAAkBgG,EAAYhG,gBANf,MAO0BgG,EAAjCjG,EAPO,EAOPA,kBAAmBE,EAPZ,EAOYA,UAS3B,GARAF,EAAkBsB,EAAI3C,EAAImF,OAAOrE,OAAS,EAC1CO,EAAkBQ,EAAI7B,EAAImF,OAAOtE,MAAQ,EAAI,IAC7CQ,EAAkBkE,MAAMzC,IAAIzB,EAAkBR,MAAQ,EAAGQ,EAAkBP,OAAS,GACpFuE,EAAUvD,SAAST,GACnBqH,ESzOmB,SAACnH,GAC5B,IAAIwI,GAAM,EACNC,GAAO,EACPlB,EAAiB,GAyFrB,OAtFmB,WACf,IAAIiB,EAIJ,IADA,IAAIE,EAAkB1I,EAAUC,EAAE0I,MAAK,SAAAlB,GAAI,OAN1B,IAM8BA,EAAK9F,UAJ/B,WAKZvB,GACL,IAAIwI,EAAc5I,EAAUC,EAAEG,GAE1ByI,EAAuB7I,EAAUC,EAAE6I,QAAO,SAAArB,GAAI,OAAIA,EAAK9F,SAAWiH,EAAYjH,UAGlF,OAAoC,IAAhCkH,EAAqBjI,QAbZ,IAa4BgI,EAAYjH,QACjD8G,GAAO,EACPlB,EAAiB,GAAH,OAAOvH,EAAUC,GAC/B,YAEA4I,EAAqBjI,OAAS,GAAK8H,GAKH,IAAhCG,EAAqBjI,QAJrB4H,GAAM,EACNjB,EAAiB,GAAH,OAAOvH,EAAUC,GAC/B,iBAEJ,GAhBKG,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,SAAtBA,GAAsB,kCA6EnC2I,GArDmB,WACf,IAAIP,EAIJ,IADA,IAAIE,EAAkB1I,EAAUE,EAAEyI,MAAK,SAAAlB,GAAI,OAnC1B,IAmC8BA,EAAK9F,UAJ/B,WAKZvB,GACL,IAAIwI,EAAc5I,EAAUE,EAAEE,GAC1ByI,EAAuB7I,EAAUE,EAAE4I,QAAO,SAAArB,GAAI,OAAIA,EAAK9F,SAAWiH,EAAYjH,UAClF,OAAoC,IAAhCkH,EAAqBjI,QAvCZ,IAuC4BgI,EAAYjH,QACjD8G,GAAO,EACPlB,EAAiB,GAAH,OAAOvH,EAAUE,GAC/B,YAEA2I,EAAqBjI,OAAS,GAAK8H,GAKH,IAAhCG,EAAqBjI,QAJrB4H,GAAM,EACNjB,EAAiB,GAAH,OAAOvH,EAAUE,GAC/B,iBAEJ,GAbKE,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,SAAtBA,GAAsB,kCAiDnC4I,GA5BmB,WACf,IAAIR,EAIJ,IADA,IAAIE,EAAkB1I,EAAUG,EAAEwI,MAAK,SAAAlB,GAAI,OA7D1B,IA6D8BA,EAAK9F,UAJ/B,WAKZvB,GACL,IAAIwI,EAAc5I,EAAUG,EAAEC,GAC1ByI,EAAuB7I,EAAUG,EAAE2I,QAAO,SAAArB,GAAI,OAAIA,EAAK9F,SAAWiH,EAAYjH,UAClF,OAAoC,IAAhCkH,EAAqBjI,QAjEZ,IAiE4BgI,EAAYjH,QACjD8G,GAAO,EACPlB,EAAiB,GAAH,OAAOvH,EAAUG,GAC/B,YAEA0I,EAAqBjI,OAAS,GAAK8H,GAKH,IAAhCG,EAAqBjI,QAJrB4H,GAAM,EACNjB,EAAiB,GAAH,OAAOvH,EAAUG,GAC/B,iBAEJ,GAbKC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,SAAtBA,GAAsB,kCAwBnC6I,GAEO,CACHT,MACAC,OACAlB,kBT0IkB2B,CAAgBlJ,GAC9B2G,EAAWwC,QACXxC,EAAWyC,YAAc,EAErBjC,EAAYqB,IAUZ,OATArB,EAAYI,eAAeC,SAAQ,SAAAC,GAAI,OAAIA,EAAK7F,WAAWwF,SAAS,GAAGM,QAAU,CAACrF,MA9B9F6C,EAASc,SAAU,EAgCPzB,GA5LE,GA6LFC,GA7LE,GA8LFF,EAAc8C,SAAS,GAAGC,KAA1B,UAA2C9C,EAA3C,IACAD,EAAc8C,SAAS,GAAGC,KAA1B,QAAyC7C,EAAzC,IACAU,EAASkC,SAAS,GAAGC,KAAUgC,MAC/BnC,GAAY,OACZZ,EAASJ,OAGb,GAAIiB,EAAYsB,KAMZ,OApDZhD,EAAcO,SAAU,EAgDZmB,EAAYI,eAAeC,SAAQ,SAAAC,GAAI,OAAIA,EAAK7F,WAAWwF,SAAS,GAAGM,QAAU,CAACrF,MAClFkC,EAAU,EACVD,EAAc8C,SAAS,GAAGC,KAA1B,UAA2C9C,EAA3C,SACAD,EAAc8C,SAAS,GAAGC,KAA1B,QAAyC7C,EAAzC,KAOR0C,GAEmB,IADnBpE,GAAe,KAEXoE,GAAY,EACZhC,EAASc,SAAU,EACnBlD,EAvNa,O,qBUpDzB3E,EAAOC,QAAU,IAA0B,uB,qBCA3CD,EAAOC,QAAU,IAA0B,iB,qBCA3CD,EAAOC,QAAU,IAA0B,mB,qBCA3CD,EAAOC,QAAU,IAA0B,mB,qBCA3CD,EAAOC,QAAU,IAA0B,oB","file":"main.42577b6a2129e1f3d4a6.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/assets.png\";","module.exports = __webpack_public_path__ + \"assets/BTN_Spin_d.png\";","module.exports = __webpack_public_path__ + \"assets/SYM3.png\";","module.exports = __webpack_public_path__ + \"assets/SYM5.png\";","module.exports = __webpack_public_path__ + \"assets/SYM2.png\";","export default __webpack_public_path__ + \"static/media/runPlay.563738c7.mp3\";","export default __webpack_public_path__ + \"assets/assets.json\";","export default __webpack_public_path__ + \"static/media/won.01408a5f.mp3\";","export default __webpack_public_path__ + \"static/media/click.747cc046.mp3\";","export default __webpack_public_path__ + \"static/media/Sound_fon.9f887eb4.mp3\";","import * as PIXI from 'pixi.js'\r\n\r\nfunction registerPixiInspector() {\r\n    window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\r\n}\r\nregisterPixiInspector()\r\nconst app = new PIXI.Application({\r\n    transparent: false,\r\n    resolution: window.devicePixelRatio,\r\n\r\n});\r\n\r\napp.renderer.backgroundColor = 0x000000;\r\napp.renderer.view.style.position = \"absolute\";\r\napp.renderer.view.style.display = \"block\";\r\napp.renderer.resize(window.innerWidth, window.innerHeight);\r\napp.view.style.width = window.innerWidth + \"px\";\r\napp.view.style.height = window.innerHeight + \"px\";\r\n\r\nexport default app\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport gsap from 'gsap'\r\nconst filterBlur = new PIXI.filters.BlurFilter(0.8, 0.9, 0.6)\r\n\r\n\r\nexport const AnimationsGameArea = (gameAreaResults) => {\r\n    for (let i = 0; i < 3; i += 1) {\r\n        gameAreaResults[i].symbols[0].filters = [filterBlur]\r\n        gameAreaResults[i].symbols[1].filters = [filterBlur]\r\n        gameAreaResults[i].symbols[2].filters = [filterBlur]\r\n\r\n        gsap.to(gameAreaResults[i].symbols[0], {\r\n            duration: 0.2,\r\n            ease: \"none\",\r\n            y: 200,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 250) //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1\r\n        });\r\n        gsap.to(gameAreaResults[i].symbols[1], {\r\n            duration: 0.2,\r\n            ease: \"none\",\r\n            y: -75,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 200) //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1\r\n        });\r\n        gsap.to(gameAreaResults[i].symbols[2], {\r\n            duration: 0.2,\r\n            ease: \"none\",\r\n            y: -100,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300) //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1\r\n        });\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../app'\r\nimport { generateRandomInt } from './generateRandomInt'\r\n\r\n\r\nconst ROW_WIDTH = 200;\r\nconst SYMBOL_SIZE = 150;\r\n\r\n\r\nexport const createRandomGameArea = (gameItemsArr) => {\r\n    const gameAreaContainer = new PIXI.Container();\r\n    let gameAreaResults = [];\r\n    let gameCombo = {\r\n        a: [],\r\n        b: [],\r\n        c: [],\r\n    };\r\n\r\n    for (let i = 0; i < 3; i += 1) {\r\n        const rowContainer = new PIXI.Container();\r\n        rowContainer.x = i * ROW_WIDTH * 1.9;\r\n        gameAreaContainer.addChild(rowContainer);\r\n        const row = {\r\n            symbols: [],\r\n        };\r\n\r\n        for (let j = 0; j < 3; j += 1) {\r\n            let randomItemId = generateRandomInt(0, gameItemsArr.length - 1);\r\n            const symbolContainer = new PIXI.Container()\r\n            const symbol = new PIXI.Sprite.from(gameItemsArr[randomItemId].itemSkin);\r\n            symbol.y = 0;\r\n            symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n            symbol.x = 0;\r\n            symbol.anchor.set(0.5);\r\n            symbolContainer.addChild(symbol)\r\n            symbolContainer.y = j * SYMBOL_SIZE;\r\n            symbolContainer.x = Math.round(SYMBOL_SIZE / 2);\r\n\r\n            const ItemObj = {\r\n                itemId: randomItemId,\r\n                itemSymbol: symbolContainer\r\n            }\r\n            row.symbols.push(symbolContainer);\r\n            rowContainer.addChild(symbolContainer);\r\n            switch (j) {\r\n                case 0:\r\n                    gameCombo.a.push(ItemObj);\r\n                    break;\r\n                case 1:\r\n                    gameCombo.b.push(ItemObj);\r\n                    break;\r\n                case 2:\r\n                    gameCombo.c.push(ItemObj);\r\n                    break;\r\n                default: console.log(\"error value\");\r\n\r\n            }\r\n\r\n        }\r\n        gameAreaResults.push(row);\r\n    }\r\n    return { gameAreaContainer, gameAreaResults, gameCombo };\r\n}\r\n\r\n","export const generateRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min","import * as PIXI from 'pixi.js'\r\nimport { GlowFilter } from 'pixi-filters';\r\nimport '@csstools/normalize.css'\r\nimport './base.css'\r\nimport './assets/SYM1.png'\r\nimport './assets/SYM2.png'\r\nimport './assets/SYM3.png'\r\nimport './assets/SYM4.png'\r\nimport './assets/SYM5.png'\r\nimport './assets/SYM6.png'\r\nimport './assets/BG.png'\r\nimport './assets/BTN_Spin.png'\r\nimport './assets/BTN_Spin_d.png'\r\nimport './assets/assets.json'\r\nimport './assets/assets.png'\r\nimport soundPlay from './assets/sound/runPlay.mp3'\r\nimport soundsWin from './assets/sound/won.mp3'\r\nimport soundsClick from './assets/sound/click.mp3'\r\nimport soundFon from './assets/sound/Sound_fon.mp3'\r\nimport app from './app'\r\nimport { loadingSceneInit } from './js/scens/LoadingScene'\r\nimport { winSceneInit } from './js/scens/WinScene'\r\nimport { buttonNextPlayInit } from './js/scens/WinScene'\r\nimport { gameSceneInit } from './js/scens/GameScene'\r\nimport { buttonPlayInit } from './js/scens/GameScene'\r\nimport { creditsPanel } from './js/scens/GameScene'\r\nimport { AnimationsGameArea } from './js/scens/GameScene'\r\nimport { gameOverSceneInit } from './js/scens/GameOverScene'\r\nimport { checkPlayResult } from './js/logics/checkPlayResult'\r\nimport { createRandomGameArea } from './js/logics/createRandomGameArea'\r\nimport { buttonNewGameInit } from './js/scens/GameOverScene'\r\n\r\ndocument.body.appendChild(app.view);\r\n\r\n//alias\r\nconst loaders = new PIXI.Loader(),\r\n    TextureCache = PIXI.utils.TextureCache,\r\n    filterGlow = new GlowFilter({ innerStrength: 3, outerStrength: 10, color: 0xffffff });\r\n\r\n//load all resources \r\nloaders\r\n    .add(\"./assets/assets.json\")\r\n    .load(setup);\r\n\r\n//sounds\r\nlet soundWin = new Audio(soundsWin);\r\nlet soundClick = new Audio(soundsClick)\r\nlet soundsPlay = new Audio(soundPlay)\r\nlet soundsFon = new Audio(soundFon)\r\n\r\n//game settings \r\nconst INITIAL_TIME_PLAY = 300;\r\nconst INITIAL_TIME_WIN = 300;\r\nconst WIN_PRIZE = 10\r\nconst SPINS_PRICE = 5;\r\n\r\n//scens\r\nlet state;\r\nlet gameScene;\r\nlet loadingScene;\r\nlet winScene;\r\nlet gameOverScene;\r\n\r\nlet buttonPlay;\r\nlet buttonPlayTexture;\r\nlet creditsPanels;\r\nlet timePlay;\r\nlet timeWinView;\r\nlet gameAreaObj;\r\nlet credits = 1000;\r\nlet winSalary = 0;\r\nlet timeLoadingGame = 50;\r\nlet isLoadingGame = true;\r\nlet targetClick = false;\r\nlet targetWin = false;\r\nlet gameItemsArr = [];\r\nlet gameAreaResults = [];\r\nlet roundResult = null;\r\n\r\n\r\nfunction setup() {\r\n\r\n    //all game item\r\n    gameItemsArr = [\r\n        { itemId: 0, itemSkin: TextureCache[\"SYM1.png\"] },\r\n        { itemId: 1, itemSkin: TextureCache[\"SYM2.png\"] },\r\n        { itemId: 2, itemSkin: TextureCache[\"SYM3.png\"] },\r\n        { itemId: 3, itemSkin: TextureCache[\"SYM4.png\"] },\r\n        { itemId: 4, itemSkin: TextureCache[\"SYM5.png\"] },\r\n        { itemId: 5, itemSkin: TextureCache[\"SYM6.png\"] },\r\n    ]\r\n\r\n    //button Play texture\r\n    buttonPlayTexture = [\r\n        TextureCache[\"BTN_Spin.png\"],\r\n        TextureCache[\"BTN_Spin_d.png\"],\r\n    ];\r\n\r\n    //initialize timer\r\n    timePlay = INITIAL_TIME_PLAY;\r\n    timeWinView = INITIAL_TIME_WIN;\r\n\r\n    //Loading Scene initialize\r\n    loadingScene = loadingSceneInit();\r\n    app.stage.addChild(loadingScene);\r\n\r\n    //Game Scene initialize\r\n    gameScene = gameSceneInit();\r\n    buttonPlay = buttonPlayInit(buttonPlayTexture);\r\n    buttonPlay.on('pointerdown', handlerClickPlay);\r\n    gameScene.addChild(buttonPlay);\r\n    creditsPanels = creditsPanel(credits, winSalary)\r\n    creditsPanels.x = app.screen.width - 135;\r\n    creditsPanels.y = app.screen.height - 200;\r\n    gameScene.addChild(creditsPanels);\r\n    app.stage.addChild(gameScene);\r\n\r\n    //Win Scene initialize\r\n    winScene = winSceneInit();\r\n    const buttonNextPlay = buttonNextPlayInit();\r\n    buttonNextPlay.on('pointerdown', handlerClickNextPlay);\r\n    winScene.addChild(buttonNextPlay);\r\n    app.stage.addChild(winScene);\r\n\r\n    //Game Over scene init\r\n    gameOverScene = gameOverSceneInit();\r\n    const buttonNewGame = buttonNewGameInit();\r\n    buttonNewGame.on('pointerdown', handlerClickNewGame);\r\n    gameOverScene.addChild(buttonNewGame);\r\n    app.stage.addChild(gameOverScene);\r\n\r\n    //init  game area\r\n    gameAreaObj = createRandomGameArea(gameItemsArr)\r\n    gameAreaResults = gameAreaObj.gameAreaResults\r\n    const { gameAreaContainer } = gameAreaObj\r\n    gameAreaContainer.y = app.screen.height / 2;\r\n    gameAreaContainer.x = app.screen.width / 2 - 100;\r\n    gameAreaContainer.pivot.set(gameAreaContainer.width / 2, gameAreaContainer.height / 2);\r\n    gameScene.addChild(gameAreaContainer);\r\n\r\n    //view game scene property\r\n    loadingScene.visible = true;\r\n    gameScene.visible = false;\r\n    winScene.visible = false;\r\n    gameOverScene.visible = false;\r\n\r\n    state = play;\r\n    app.ticker.add(delta => gameLoop(delta));\r\n}\r\n\r\n//NextPlay button Win Scene handler\r\nconst handlerClickNextPlay = () => {\r\n    targetWin = false;\r\n    winScene.visible = false;\r\n    timeWinView = INITIAL_TIME_WIN;\r\n}\r\n\r\n//New Game button handler\r\nconst handlerClickNewGame = () => {\r\n    gameOverScene.visible = false;\r\n    credits = 1000;\r\n    winSalary = 0;\r\n    creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n    creditsPanels.children[2].text = `WIN: ${winSalary}$`;\r\n}\r\n\r\n//button Play handler\r\nconst handlerClickPlay = () => {\r\n    if (!targetClick) {\r\n        targetClick = true;\r\n        timePlay = INITIAL_TIME_PLAY;\r\n        buttonPlay.texture = buttonPlayTexture[1];\r\n        credits -= SPINS_PRICE;\r\n        creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n\r\n        if (roundResult && roundResult.resultLineItem.length > 0) {\r\n            roundResult.resultLineItem.forEach(item => item.itemSymbol.children[0].filters = null)\r\n        }\r\n\r\n        AnimationsGameArea(gameAreaResults)\r\n        soundClick.play();\r\n        soundsPlay.play();\r\n        soundsFon.play();\r\n        soundsFon.loop = true;\r\n    }\r\n}\r\n\r\n//game event preloading event\r\nconst eventPreloadingGame = () => {\r\n    if (isLoadingGame) {\r\n        timeLoadingGame -= 1;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    if (timeLoadingGame == 0) {\r\n        isLoadingGame = false;\r\n        loadingScene.visible = false;\r\n        gameScene.visible = true;\r\n        return;\r\n    }\r\n}\r\n//Game Over event\r\nconst eventViewGameOver = () => {\r\n    gameOverScene.visible = true;\r\n}\r\n\r\n//Game Win event\r\nconst eventViewGameWin = () => {\r\n    winScene.visible = true;\r\n}\r\n\r\nfunction gameLoop(delta) {\r\n    state(delta);\r\n}\r\n\r\nfunction play() {\r\n    eventPreloadingGame();\r\n\r\n    if (targetClick) {\r\n        timePlay -= 1;\r\n\r\n        if (timePlay == 0) {\r\n            targetClick = false;\r\n            buttonPlay.texture = buttonPlayTexture[0];\r\n            gameScene.removeChild(gameAreaObj.gameAreaContainer);\r\n\r\n            gameAreaObj = createRandomGameArea(gameItemsArr)\r\n            gameAreaResults = gameAreaObj.gameAreaResults\r\n            const { gameAreaContainer, gameCombo } = gameAreaObj\r\n            gameAreaContainer.y = app.screen.height / 2;\r\n            gameAreaContainer.x = app.screen.width / 2 - 100;\r\n            gameAreaContainer.pivot.set(gameAreaContainer.width / 2, gameAreaContainer.height / 2);\r\n            gameScene.addChild(gameAreaContainer);\r\n            roundResult = checkPlayResult(gameCombo);\r\n            soundsPlay.pause();\r\n            soundsPlay.currentTime = 0;\r\n\r\n            if (roundResult.win) {\r\n                roundResult.resultLineItem.forEach(item => item.itemSymbol.children[0].filters = [filterGlow])\r\n                eventViewGameWin();\r\n                credits += WIN_PRIZE;\r\n                winSalary += WIN_PRIZE;\r\n                creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n                creditsPanels.children[2].text = `WIN: ${winSalary}$`;\r\n                winScene.children[2].text = `${WIN_PRIZE}$`;\r\n                targetWin = true;\r\n                soundWin.play();\r\n                return\r\n            }\r\n            if (roundResult.loss) {\r\n                eventViewGameOver();\r\n                roundResult.resultLineItem.forEach(item => item.itemSymbol.children[0].filters = [filterGlow])\r\n                credits = 0\r\n                creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n                creditsPanels.children[2].text = `WIN: ${winSalary}$`;\r\n                return\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    if (targetWin) {\r\n        timeWinView -= 1;\r\n        if (timeWinView == 0) {\r\n            targetWin = false;\r\n            winScene.visible = false;\r\n            timeWinView = INITIAL_TIME_WIN;\r\n        }\r\n    }\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n//loading Scene initialize\r\nexport const loadingSceneInit = () => {\r\n    const loadingScene = new PIXI.Container()\r\n    const SpinnerLoading = new PIXI.Text(\"...Loading!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 24,\r\n        fill: \"white\",\r\n        stroke: '#ff3300',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#000000\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    SpinnerLoading.anchor.set(0.5);\r\n    SpinnerLoading.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    loadingScene.addChild(SpinnerLoading)\r\n\r\n    return loadingScene;\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n\r\n\r\nexport const gameSceneInit = () => {\r\n    const gameScene = new PIXI.Container()\r\n\r\n\r\n    const bg = new PIXI.Sprite.from(PIXI.utils.TextureCache[\"BG.png\"]);\r\n    bg.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    bg.anchor.set(0.5);\r\n    bg.scale.x = Math.min(app.screen.width / bg.width);\r\n    bg.scale.y = Math.min(app.screen.height / bg.height);\r\n    // bg.scale = new PIXI.Point(1, 2);\r\n    gameScene.addChild(bg)\r\n\r\n    gameScene.width = app.screen.width;\r\n    gameScene.height = app.screen.height\r\n    gameScene.x = app.screen.width / 2;\r\n    gameScene.y = app.screen.height / 2;\r\n    gameScene.pivot.set(app.screen.width / 2, app.screen.height / 2);\r\n    return gameScene\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//Game Scene Control initialize\r\nexport const buttonPlayInit = (buttonPlayTexture) => {\r\n    const buttonPlay = new PIXI.Sprite(buttonPlayTexture[0]);\r\n    buttonPlay.position.set(app.screen.width - 130, app.screen.height / 2);\r\n    buttonPlay.anchor.set(0.5);\r\n    buttonPlay.interactive = true;\r\n    buttonPlay.buttonMode = true;\r\n    return buttonPlay\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\nexport const creditsPanel = (credits, winSalary) => {\r\n    const panelContainer = new PIXI.Container()\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0xBF6730, 1);\r\n    Box.beginFill(0x061639, 1);\r\n    Box.drawRoundedRect(0, 0, 200, 150);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    panelContainer.addChild(Box)\r\n\r\n    let creditsText = new PIXI.Text(`MONEY: ${credits}$`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 16,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    creditsText.anchor.set(0.5);\r\n    creditsText.position.set(-20, -30);\r\n    panelContainer.addChild(creditsText)\r\n\r\n    let winSalaryText = new PIXI.Text(`WIN: ${winSalary}$`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 16,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    winSalaryText.anchor.set(0.5);\r\n    winSalaryText.position.set(-47, -5);\r\n    panelContainer.addChild(winSalaryText)\r\n\r\n    return panelContainer\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//Win Scene initialize\r\nexport const winSceneInit = () => {\r\n    const winScene = new PIXI.Container()\r\n    //background panel\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0x061639, 1);\r\n    Box.beginFill(0x061639, 0.45);\r\n    Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    winScene.addChild(Box)\r\n\r\n    //text info You Won\r\n    const winText = new PIXI.Text(\"YOU WON!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"yellow\",\r\n        stroke: 'black',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    winText.anchor.set(0.5);\r\n    winText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    winScene.addChild(winText)\r\n\r\n    let winSalaryText = new PIXI.Text(`WIN`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    winSalaryText.anchor.set(0.5);\r\n    winSalaryText.position.set(app.screen.width / 2, app.screen.height / 2 + 50);\r\n    winScene.addChild(winSalaryText)\r\n\r\n    return winScene\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//interactive display button fullscreen\r\nexport const buttonNextPlayInit = () => {\r\n    const buttonNextPlay = new PIXI.Graphics();\r\n    buttonNextPlay.beginFill(0x061639, 0.1);\r\n    buttonNextPlay.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n    buttonNextPlay.pivot.set(buttonNextPlay.width / 2, buttonNextPlay.height / 2)\r\n    buttonNextPlay.endFill();\r\n    buttonNextPlay.interactive = true;\r\n    buttonNextPlay.buttonMode = true;\r\n    return buttonNextPlay\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\nexport const gameOverSceneInit = () => {\r\n    const gameOverScene = new PIXI.Container()\r\n\r\n    //background panel\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0xFF00FF, 1);\r\n    Box.beginFill(0x650A5A, 0.45);\r\n    Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    gameOverScene.addChild(Box)\r\n\r\n    //text info You Lost\r\n    const losText = new PIXI.Text(\"YOU LOST!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"red\",\r\n        stroke: 'black',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    losText.anchor.set(0.5);\r\n    losText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    gameOverScene.addChild(losText)\r\n\r\n    return gameOverScene\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//interactive display button fullscreen\r\nexport const buttonNewGameInit = () => {\r\n    const buttonNewGame = new PIXI.Graphics();\r\n    buttonNewGame.beginFill(0x061639, 0.1);\r\n    buttonNewGame.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n    buttonNewGame.pivot.set(buttonNewGame.width / 2, buttonNewGame.height / 2)\r\n    buttonNewGame.endFill();\r\n    buttonNewGame.interactive = true;\r\n    buttonNewGame.buttonMode = true;\r\n    return buttonNewGame\r\n}\r\n","\r\nexport const checkPlayResult = (gameCombo) => {\r\n    let win = false\r\n    let loss = false\r\n    let resultLineItem = [];\r\n    const wildSymbolId = 0;\r\n\r\n    const checkALine = () => {\r\n        if (win) {\r\n            return\r\n        }\r\n        let resultCheckWild = gameCombo.a.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.a[i];\r\n\r\n            let resultCheckArbitrary = gameCombo.a.filter(item => item.itemId === checkSymbol.itemId)\r\n\r\n\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.a]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a]\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkBLine = () => {\r\n        if (win) {\r\n            return\r\n        }\r\n        let resultCheckWild = gameCombo.b.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.b[i];\r\n            let resultCheckArbitrary = gameCombo.b.filter(item => item.itemId === checkSymbol.itemId)\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.b]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b]\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkCLine = () => {\r\n        if (win) {\r\n            return\r\n        }\r\n        let resultCheckWild = gameCombo.c.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.c[i];\r\n            let resultCheckArbitrary = gameCombo.c.filter(item => item.itemId === checkSymbol.itemId)\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.c]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c]\r\n                return\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    checkALine()\r\n    checkBLine()\r\n    checkCLine()\r\n\r\n    return {\r\n        win,\r\n        loss,\r\n        resultLineItem,\r\n    }\r\n\r\n}","module.exports = __webpack_public_path__ + \"assets/BTN_Spin.png\";","module.exports = __webpack_public_path__ + \"assets/BG.png\";","module.exports = __webpack_public_path__ + \"assets/SYM6.png\";","module.exports = __webpack_public_path__ + \"assets/SYM4.png\";","module.exports = __webpack_public_path__ + \"assets/SYM1.png\";"],"sourceRoot":""}