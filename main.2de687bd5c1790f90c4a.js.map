{"version":3,"sources":["webpack:///./assets/assets.png","webpack:///./assets/BTN_Spin_d.png","webpack:///./assets/SYM3.png","webpack:///./assets/SYM5.png","webpack:///./assets/SYM2.png","webpack:///./assets/sound/runPlay.mp3","webpack:///./assets/assets.json","webpack:///./assets/sound/won.mp3","webpack:///./assets/sound/click.mp3","webpack:///./assets/sound/Sound_fon.mp3","webpack:///./app.js","webpack:///./js/scens/GameScene/AnimationGameArea.js","webpack:///./js/logics/generateRandomInt.js","webpack:///./js/scens/GameScene/createRandomGameArea.js","webpack:///./index.js","webpack:///./js/scens/LoadingScene/loadingScene.js","webpack:///./js/scens/GameScene/gameScene.js","webpack:///./js/scens/GameScene/buttonPlay.js","webpack:///./js/scens/GameScene/creditsPanel.js","webpack:///./js/scens/WinScene/winScene.js","webpack:///./js/scens/WinScene/buttonNextPlay.js","webpack:///./js/scens/GameOverScene/gameOverScene.js","webpack:///./js/scens/GameOverScene/buttonNewGame.js","webpack:///./js/scens/GameScene/AreaForAnimation.js","webpack:///./js/logics/checkPlayResult.js","webpack:///./assets/BTN_Spin.png","webpack:///./assets/BG.png","webpack:///./assets/SYM6.png","webpack:///./assets/SYM4.png","webpack:///./assets/SYM1.png"],"names":["module","exports","window","__PIXI_INSPECTOR_GLOBAL_HOOK__","register","PIXI","app","transparent","resolution","devicePixelRatio","renderer","backgroundColor","view","style","position","display","resize","innerWidth","innerHeight","width","height","filterBlur","BlurFilter","generateRandomInt","min","max","Math","floor","random","createRandomGameArea","gameItemsArr","gameAreaContainer","gameCombo","a","b","c","i","rowContainer","x","addChild","j","randomItemId","length","symbolContainer","symbol","from","itemSkin","y","scale","anchor","set","round","SYMBOL_SIZE","ItemObj","itemId","itemSymbol","push","console","log","document","body","appendChild","loaders","TextureCache","filterGlow","GlowFilter","innerStrength","outerStrength","color","add","load","buttonPlayTexture","timePlay","timeWinView","loadingScene","SpinnerLoading","fontFamily","fontSize","fill","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","PI","dropShadowDistance","screen","stage","gameScene","bg","pivot","buttonPlay","interactive","buttonMode","on","handlerClickPlay","creditsPanels","credits","winSalary","panelContainer","Box","lineStyle","beginFill","drawRoundedRect","endFill","creditsText","winSalaryText","creditsPanel","winScene","winText","winSceneInit","buttonNextPlay","drawRect","buttonNextPlayInit","handlerClickNextPlay","gameOverScene","losText","gameOverSceneInit","buttonNewGame","buttonNewGameInit","handlerClickNewGame","gameAreaObj","gameAreaForAnimation","gameAreaAnimationContainer","itemsAnimationRef","row","symbols","areaForAnimation","gameAreaAnimationItemRefs","AnimationContainer","filters","gsap","to","duration","ease","modifiers","utils","unitize","parseFloat","repeat","AnimationsGameArea","visible","state","play","ticker","delta","gameLoop","soundWin","Audio","soundsWin","soundClick","soundsClick","soundsPlay","soundPlay","soundsFon","soundFon","timeLoadingGame","isLoadingGame","targetClick","targetWin","roundResult","children","text","texture","removeChild","loop","eventPreloadingGame","win","loss","resultLineItem","resultCheckWild","some","item","checkSymbol","resultCheckArbitrary","filter","checkALine","checkBLine","checkCLine","checkPlayResult","pause","currentTime","forEach","WIN_PRIZE"],"mappings":"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","file":"main.2de687bd5c1790f90c4a.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/assets.png\";","module.exports = __webpack_public_path__ + \"assets/BTN_Spin_d.png\";","module.exports = __webpack_public_path__ + \"assets/SYM3.png\";","module.exports = __webpack_public_path__ + \"assets/SYM5.png\";","module.exports = __webpack_public_path__ + \"assets/SYM2.png\";","export default __webpack_public_path__ + \"static/media/runPlay.563738c7.mp3\";","export default __webpack_public_path__ + \"assets/assets.json\";","export default __webpack_public_path__ + \"static/media/won.01408a5f.mp3\";","export default __webpack_public_path__ + \"static/media/click.747cc046.mp3\";","export default __webpack_public_path__ + \"static/media/Sound_fon.9f887eb4.mp3\";","import * as PIXI from 'pixi.js'\r\n\r\nfunction registerPixiInspector() {\r\n    window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\r\n}\r\nregisterPixiInspector()\r\nconst app = new PIXI.Application({\r\n    transparent: false,\r\n    resolution: window.devicePixelRatio,\r\n\r\n});\r\n\r\napp.renderer.backgroundColor = 0x000000;\r\napp.renderer.view.style.position = \"absolute\";\r\napp.renderer.view.style.display = \"block\";\r\napp.renderer.resize(window.innerWidth, window.innerHeight);\r\napp.view.style.width = window.innerWidth + \"px\";\r\napp.view.style.height = window.innerHeight + \"px\";\r\n\r\nexport default app\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport gsap from 'gsap'\r\nconst filterBlur = new PIXI.filters.BlurFilter(0.8, 0.9, 0.6)\r\n\r\n\r\n/**\r\n * function create animation and play her\r\n * @param {Array} gameAreaAnimationItemRefs it's array with objects game rows with symbols for animation\r\n */\r\n\r\nexport const AnimationsGameArea = (gameAreaAnimationItemRefs) => {\r\n    for (let i = 0; i < 3; i += 1) {\r\n        gameAreaAnimationItemRefs[i].symbols[0].filters = [filterBlur]\r\n        gameAreaAnimationItemRefs[i].symbols[2].filters = [filterBlur]\r\n        gameAreaAnimationItemRefs[i].symbols[5].filters = [filterBlur]\r\n\r\n        gsap.to(gameAreaAnimationItemRefs[i].symbols[0], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: 250,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 250) //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1\r\n        });\r\n        gsap.to(gameAreaAnimationItemRefs[i].symbols[1], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 200) //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1\r\n        });\r\n        gsap.to(gameAreaAnimationItemRefs[i].symbols[2], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300) //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1\r\n        });\r\n        gsap.to(gameAreaAnimationItemRefs[i].symbols[3], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300) //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1\r\n        });\r\n        gsap.to(gameAreaAnimationItemRefs[i].symbols[4], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: -125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300) //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1\r\n        });\r\n        gsap.to(gameAreaAnimationItemRefs[i].symbols[5], {\r\n            duration: 0.3,\r\n            ease: \"none\",\r\n            y: 125,\r\n            modifiers: {\r\n                y: gsap.utils.unitize(y => parseFloat(y) % 300) //force x value to be between 0 and 500 using modulus\r\n            },\r\n            repeat: -1\r\n        });\r\n\r\n    }\r\n}","export const generateRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min","import * as PIXI from 'pixi.js'\r\nimport { generateRandomInt } from '../../logics/generateRandomInt'\r\n\r\n\r\n//width row\r\nconst ROW_WIDTH = 200;\r\n//symbol size\r\nconst SYMBOL_SIZE = 150;\r\n\r\n/**\r\n * function create game area  \r\n * @param {Array} gameItemsArr it's array all game items\r\n * @returns object with gameAreaContainer: pixi container with game row reels for view, \r\n * gameCombo: object with results create game area conversion in column(array with symbols) for check results\r\n */\r\nexport const createRandomGameArea = (gameItemsArr) => {\r\n    const gameAreaContainer = new PIXI.Container();\r\n\r\n    let gameCombo = {\r\n        a: [],\r\n        b: [],\r\n        c: [],\r\n    };\r\n\r\n    for (let i = 0; i < 3; i += 1) {\r\n        const rowContainer = new PIXI.Container();\r\n        rowContainer.x = i * ROW_WIDTH * 1.9;\r\n        gameAreaContainer.addChild(rowContainer);\r\n\r\n        for (let j = 0; j < 3; j += 1) {\r\n            let randomItemId = generateRandomInt(0, gameItemsArr.length - 1);\r\n            const symbolContainer = new PIXI.Container()\r\n            const symbol = new PIXI.Sprite.from(gameItemsArr[randomItemId].itemSkin);\r\n            symbol.y = 0;\r\n            symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n            symbol.x = 0;\r\n            symbol.anchor.set(0.5);\r\n            symbolContainer.addChild(symbol)\r\n            symbolContainer.y = j * SYMBOL_SIZE;\r\n            symbolContainer.x = Math.round(SYMBOL_SIZE / 2);\r\n\r\n            const ItemObj = {\r\n                itemId: randomItemId,\r\n                itemSymbol: symbolContainer\r\n            }\r\n\r\n            rowContainer.addChild(symbolContainer);\r\n            switch (j) {\r\n                case 0:\r\n                    gameCombo.a.push(ItemObj);\r\n                    break;\r\n                case 1:\r\n                    gameCombo.b.push(ItemObj);\r\n                    break;\r\n                case 2:\r\n                    gameCombo.c.push(ItemObj);\r\n                    break;\r\n                default: console.log(\"error value\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    return { gameAreaContainer, gameCombo };\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport { GlowFilter } from 'pixi-filters';\r\nimport '@csstools/normalize.css'\r\nimport './base.css'\r\nimport './assets/SYM1.png'\r\nimport './assets/SYM2.png'\r\nimport './assets/SYM3.png'\r\nimport './assets/SYM4.png'\r\nimport './assets/SYM5.png'\r\nimport './assets/SYM6.png'\r\nimport './assets/BG.png'\r\nimport './assets/BTN_Spin.png'\r\nimport './assets/BTN_Spin_d.png'\r\nimport './assets/assets.json'\r\nimport './assets/assets.png'\r\nimport soundPlay from './assets/sound/runPlay.mp3'\r\nimport soundsWin from './assets/sound/won.mp3'\r\nimport soundsClick from './assets/sound/click.mp3'\r\nimport soundFon from './assets/sound/Sound_fon.mp3'\r\nimport app from './app'\r\nimport { loadingSceneInit } from './js/scens/LoadingScene'\r\nimport { winSceneInit } from './js/scens/WinScene'\r\nimport { buttonNextPlayInit } from './js/scens/WinScene'\r\nimport { gameSceneInit } from './js/scens/GameScene'\r\nimport { buttonPlayInit } from './js/scens/GameScene'\r\nimport { creditsPanel } from './js/scens/GameScene'\r\nimport { AnimationsGameArea } from './js/scens/GameScene'\r\nimport { gameOverSceneInit } from './js/scens/GameOverScene'\r\nimport { checkPlayResult } from './js/logics/checkPlayResult'\r\nimport { createRandomGameArea } from './js/scens/GameScene'\r\nimport { buttonNewGameInit } from './js/scens/GameOverScene'\r\nimport { areaForAnimation } from './js/scens/GameScene'\r\n\r\ndocument.body.appendChild(app.view);\r\n\r\n//alias\r\nconst loaders = new PIXI.Loader(),\r\n    TextureCache = PIXI.utils.TextureCache,\r\n    filterGlow = new GlowFilter({ innerStrength: 3, outerStrength: 10, color: 0xffffff });\r\n\r\n//load all resources \r\nloaders\r\n    .add(\"./assets/assets.json\")\r\n    .load(setup);\r\n\r\n//sounds\r\nlet soundWin = new Audio(soundsWin);\r\nlet soundClick = new Audio(soundsClick)\r\nlet soundsPlay = new Audio(soundPlay)\r\nlet soundsFon = new Audio(soundFon)\r\n\r\n//game settings \r\nconst INITIAL_TIME_PLAY = 300;\r\nconst INITIAL_TIME_WIN = 300;\r\nconst WIN_PRIZE = 10\r\nconst SPINS_PRICE = 5;\r\n\r\n//scens\r\nlet state;\r\nlet gameScene;\r\nlet loadingScene;\r\nlet winScene;\r\nlet gameOverScene;\r\nlet AnimationContainer;\r\n\r\nlet buttonPlay;\r\nlet buttonPlayTexture;\r\nlet creditsPanels;\r\nlet timePlay;\r\nlet timeWinView;\r\nlet gameAreaObj;\r\nlet credits = 1000;\r\nlet winSalary = 0;\r\nlet timeLoadingGame = 50;\r\nlet isLoadingGame = true;\r\nlet targetClick = false;\r\nlet targetWin = false;\r\nlet gameItemsArr = [];\r\nlet gameAreaAnimationItemRefs = [];\r\nlet roundResult = null;\r\n\r\n\r\nfunction setup() {\r\n\r\n    //all game item\r\n    gameItemsArr = [\r\n        { itemId: 0, itemSkin: TextureCache[\"SYM1.png\"] },\r\n        { itemId: 1, itemSkin: TextureCache[\"SYM2.png\"] },\r\n        { itemId: 2, itemSkin: TextureCache[\"SYM3.png\"] },\r\n        { itemId: 3, itemSkin: TextureCache[\"SYM4.png\"] },\r\n        { itemId: 4, itemSkin: TextureCache[\"SYM5.png\"] },\r\n        { itemId: 5, itemSkin: TextureCache[\"SYM6.png\"] },\r\n    ]\r\n\r\n    //button Play texture\r\n    buttonPlayTexture = [\r\n        TextureCache[\"BTN_Spin.png\"],\r\n        TextureCache[\"BTN_Spin_d.png\"],\r\n    ];\r\n\r\n    //initialize timer\r\n    timePlay = INITIAL_TIME_PLAY;\r\n    timeWinView = INITIAL_TIME_WIN;\r\n\r\n    //Loading Scene initialize\r\n    loadingScene = loadingSceneInit();\r\n    app.stage.addChild(loadingScene);\r\n\r\n    //Game Scene initialize\r\n    gameScene = gameSceneInit();\r\n    buttonPlay = buttonPlayInit(buttonPlayTexture);\r\n    buttonPlay.on('pointerdown', handlerClickPlay);\r\n    gameScene.addChild(buttonPlay);\r\n    creditsPanels = creditsPanel(credits, winSalary)\r\n    creditsPanels.x = app.screen.width - 135;\r\n    creditsPanels.y = app.screen.height - 200;\r\n    gameScene.addChild(creditsPanels);\r\n    app.stage.addChild(gameScene);\r\n\r\n    //Win Scene initialize\r\n    winScene = winSceneInit();\r\n    const buttonNextPlay = buttonNextPlayInit();\r\n    buttonNextPlay.on('pointerdown', handlerClickNextPlay);\r\n    winScene.addChild(buttonNextPlay);\r\n    app.stage.addChild(winScene);\r\n\r\n    //Game Over scene init\r\n    gameOverScene = gameOverSceneInit();\r\n    const buttonNewGame = buttonNewGameInit();\r\n    buttonNewGame.on('pointerdown', handlerClickNewGame);\r\n    gameOverScene.addChild(buttonNewGame);\r\n    app.stage.addChild(gameOverScene);\r\n\r\n    //init  game area\r\n    //create random area\r\n    gameAreaObj = createRandomGameArea(gameItemsArr)\r\n    const { gameAreaContainer } = gameAreaObj\r\n    gameAreaContainer.y = app.screen.height / 2;\r\n    gameAreaContainer.x = app.screen.width / 2 - 100;\r\n    gameAreaContainer.pivot.set(gameAreaContainer.width / 2, gameAreaContainer.height / 2);\r\n    gameScene.addChild(gameAreaContainer);\r\n    // create animation area\r\n    const gameAreaForAnimation = areaForAnimation(gameItemsArr)\r\n    let { gameAreaAnimationContainer, itemsAnimationRef } = gameAreaForAnimation\r\n    gameAreaAnimationItemRefs = itemsAnimationRef\r\n    AnimationContainer = gameAreaAnimationContainer;\r\n    AnimationContainer.y = (app.screen.height / 2) + 200;\r\n    AnimationContainer.x = app.screen.width / 2 - 100;\r\n    AnimationContainer.pivot.set(gameAreaAnimationContainer.width / 2, gameAreaAnimationContainer.height / 2);\r\n    //create animation\r\n    AnimationsGameArea(gameAreaAnimationItemRefs)\r\n    gameScene.addChild(AnimationContainer);\r\n\r\n    //view game scene property\r\n    gameAreaContainer.visible = true\r\n    AnimationContainer.visible = false;\r\n    loadingScene.visible = true;\r\n    gameScene.visible = false;\r\n    winScene.visible = false;\r\n    gameOverScene.visible = false;\r\n\r\n    state = play;\r\n    app.ticker.add(delta => gameLoop(delta));\r\n}\r\n\r\n\r\n//NextPlay button Win Scene handler\r\nconst handlerClickNextPlay = () => {\r\n    targetWin = false;\r\n    winScene.visible = false;\r\n    timeWinView = INITIAL_TIME_WIN;\r\n}\r\n\r\n//New Game button handler\r\nconst handlerClickNewGame = () => {\r\n    gameOverScene.visible = false;\r\n    credits = 1000;\r\n    winSalary = 0;\r\n    creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n    creditsPanels.children[2].text = `WIN: ${winSalary}$`;\r\n}\r\n\r\n//button Play handler\r\nconst handlerClickPlay = () => {\r\n    if (!targetClick) {\r\n        targetClick = true;\r\n        timePlay = INITIAL_TIME_PLAY;\r\n        buttonPlay.texture = buttonPlayTexture[1];\r\n        credits -= SPINS_PRICE;\r\n        creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n\r\n        gameScene.removeChild(gameAreaObj.gameAreaContainer);\r\n        gameAreaObj = createRandomGameArea(gameItemsArr)\r\n        const { gameAreaContainer } = gameAreaObj\r\n        gameAreaContainer.y = app.screen.height / 2;\r\n        gameAreaContainer.x = (app.screen.width / 2) - 100;\r\n        gameAreaContainer.pivot.set(gameAreaContainer.width / 2, gameAreaContainer.height / 2);\r\n        gameScene.addChild(gameAreaContainer);\r\n\r\n        gameAreaContainer.visible = false;\r\n        AnimationContainer.visible = true;\r\n\r\n        soundClick.play();\r\n        soundsPlay.play();\r\n        soundsFon.play();\r\n        soundsFon.loop = true;\r\n    }\r\n}\r\n\r\n//game event preloading event\r\nconst eventPreloadingGame = () => {\r\n    if (isLoadingGame) {\r\n        timeLoadingGame -= 1;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    if (timeLoadingGame == 0) {\r\n        isLoadingGame = false;\r\n        loadingScene.visible = false;\r\n        gameScene.visible = true;\r\n        return;\r\n    }\r\n}\r\n\r\n//Game Over event\r\nconst eventViewGameOver = () => {\r\n    gameOverScene.visible = true;\r\n}\r\n\r\n//Game Win event\r\nconst eventViewGameWin = () => {\r\n    winScene.visible = true;\r\n}\r\n\r\nfunction gameLoop(delta) {\r\n    state(delta);\r\n}\r\n\r\nfunction play() {\r\n    eventPreloadingGame();\r\n\r\n    if (targetClick) {\r\n        timePlay -= 1;\r\n\r\n        if (timePlay == 0) {\r\n            targetClick = false;\r\n            buttonPlay.texture = buttonPlayTexture[0];\r\n            AnimationContainer.visible = false;\r\n            const { gameAreaContainer, gameCombo } = gameAreaObj\r\n            gameAreaContainer.visible = true;\r\n            roundResult = checkPlayResult(gameCombo);\r\n            soundsPlay.pause();\r\n            soundsPlay.currentTime = 0;\r\n\r\n            if (roundResult.win) {\r\n                roundResult.resultLineItem.forEach(item => item.itemSymbol.children[0].filters = [filterGlow])\r\n                eventViewGameWin();\r\n                credits += WIN_PRIZE;\r\n                winSalary += WIN_PRIZE;\r\n                creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n                creditsPanels.children[2].text = `WIN: ${winSalary}$`;\r\n                winScene.children[2].text = `${WIN_PRIZE}$`;\r\n                targetWin = true;\r\n                soundWin.play();\r\n                return\r\n            }\r\n            if (roundResult.loss) {\r\n                eventViewGameOver();\r\n                roundResult.resultLineItem.forEach(item => item.itemSymbol.children[0].filters = [filterGlow])\r\n                credits = 0\r\n                creditsPanels.children[1].text = `MONEY: ${credits}$`;\r\n                creditsPanels.children[2].text = `WIN: ${winSalary}$`;\r\n                return\r\n            }\r\n        }\r\n    }\r\n//start event win timer\r\n    if (targetWin) {\r\n        timeWinView -= 1;\r\n        if (timeWinView == 0) {\r\n            targetWin = false;\r\n            winScene.visible = false;\r\n            timeWinView = INITIAL_TIME_WIN;\r\n        }\r\n    }\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n//loading Scene initialize\r\nexport const loadingSceneInit = () => {\r\n    const loadingScene = new PIXI.Container()\r\n    const SpinnerLoading = new PIXI.Text(\"...Loading!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 24,\r\n        fill: \"white\",\r\n        stroke: '#ff3300',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#000000\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    SpinnerLoading.anchor.set(0.5);\r\n    SpinnerLoading.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    loadingScene.addChild(SpinnerLoading)\r\n\r\n    return loadingScene;\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n\r\n//init game scene\r\nexport const gameSceneInit = () => {\r\n    const gameScene = new PIXI.Container()\r\n    const bg = new PIXI.Sprite.from(PIXI.utils.TextureCache[\"BG.png\"]);\r\n    bg.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    bg.anchor.set(0.5);\r\n    bg.scale.x = Math.min(app.screen.width / bg.width);\r\n    bg.scale.y = Math.min(app.screen.height / bg.height);\r\n    gameScene.addChild(bg)\r\n\r\n    gameScene.width = app.screen.width;\r\n    gameScene.height = app.screen.height\r\n    gameScene.x = app.screen.width / 2;\r\n    gameScene.y = app.screen.height / 2;\r\n    gameScene.pivot.set(app.screen.width / 2, app.screen.height / 2);\r\n    return gameScene\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//Game Scene Control initialize\r\nexport const buttonPlayInit = (buttonPlayTexture) => {\r\n    const buttonPlay = new PIXI.Sprite(buttonPlayTexture[0]);\r\n    buttonPlay.position.set(app.screen.width - 130, app.screen.height / 2);\r\n    buttonPlay.anchor.set(0.5);\r\n    buttonPlay.interactive = true;\r\n    buttonPlay.buttonMode = true;\r\n    return buttonPlay\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//init panel user credits coins\r\nexport const creditsPanel = (credits, winSalary) => {\r\n    const panelContainer = new PIXI.Container()\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0xBF6730, 1);\r\n    Box.beginFill(0x061639, 1);\r\n    Box.drawRoundedRect(0, 0, 200, 150);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    panelContainer.addChild(Box)\r\n\r\n    let creditsText = new PIXI.Text(`MONEY: ${credits}$`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 16,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    creditsText.anchor.set(0.5);\r\n    creditsText.position.set(-20, -30);\r\n    panelContainer.addChild(creditsText)\r\n\r\n    let winSalaryText = new PIXI.Text(`WIN: ${winSalary}$`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 16,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    winSalaryText.anchor.set(0.5);\r\n    winSalaryText.position.set(-47, -5);\r\n    panelContainer.addChild(winSalaryText)\r\n\r\n    return panelContainer\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//Win Scene initialize\r\nexport const winSceneInit = () => {\r\n    const winScene = new PIXI.Container()\r\n    //background panel\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0x061639, 1);\r\n    Box.beginFill(0x061639, 0.45);\r\n    Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    winScene.addChild(Box)\r\n\r\n    //text info You Won\r\n    const winText = new PIXI.Text(\"YOU WON!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"yellow\",\r\n        stroke: 'black',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    winText.anchor.set(0.5);\r\n    winText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    winScene.addChild(winText)\r\n\r\n    let winSalaryText = new PIXI.Text(`WIN`, {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"yellow\",\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 3,\r\n        dropShadowDistance: 3,\r\n    });\r\n    winSalaryText.anchor.set(0.5);\r\n    winSalaryText.position.set(app.screen.width / 2, app.screen.height / 2 + 50);\r\n    winScene.addChild(winSalaryText)\r\n\r\n    return winScene\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//interactive display button fullscreen\r\nexport const buttonNextPlayInit = () => {\r\n    const buttonNextPlay = new PIXI.Graphics();\r\n    buttonNextPlay.beginFill(0x061639, 0.1);\r\n    buttonNextPlay.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n    buttonNextPlay.pivot.set(buttonNextPlay.width / 2, buttonNextPlay.height / 2)\r\n    buttonNextPlay.endFill();\r\n    buttonNextPlay.interactive = true;\r\n    buttonNextPlay.buttonMode = true;\r\n    return buttonNextPlay\r\n}\r\n\r\n","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\nexport const gameOverSceneInit = () => {\r\n    const gameOverScene = new PIXI.Container()\r\n\r\n    //background panel\r\n    const Box = new PIXI.Graphics();\r\n    Box.lineStyle(2, 0xFF00FF, 1);\r\n    Box.beginFill(0x650A5A, 0.45);\r\n    Box.drawRoundedRect(app.screen.width / 2, app.screen.height / 2, app.screen.width - app.screen.width / 3, app.screen.height - app.screen.height / 3, 16);\r\n    Box.pivot.set(Box.width / 2, Box.height / 2)\r\n    Box.endFill();\r\n    gameOverScene.addChild(Box)\r\n\r\n    //text info You Lost\r\n    const losText = new PIXI.Text(\"YOU LOST!\", {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 36,\r\n        fill: \"red\",\r\n        stroke: 'black',\r\n        strokeThickness: 4,\r\n        dropShadow: true,\r\n        dropShadowColor: \"#ffffff\",\r\n        dropShadowBlur: 4,\r\n        dropShadowAngle: Math.PI / 6,\r\n        dropShadowDistance: 6,\r\n    });\r\n    losText.anchor.set(0.5);\r\n    losText.position.set(app.screen.width / 2, app.screen.height / 2);\r\n    gameOverScene.addChild(losText)\r\n\r\n    return gameOverScene\r\n}","import * as PIXI from 'pixi.js'\r\nimport app from '../../../app'\r\n\r\n//interactive display button fullscreen\r\nexport const buttonNewGameInit = () => {\r\n    const buttonNewGame = new PIXI.Graphics();\r\n    buttonNewGame.beginFill(0x061639, 0.1);\r\n    buttonNewGame.drawRect(app.screen.width / 2, app.screen.height / 2, app.screen.width, app.screen.height);\r\n    buttonNewGame.pivot.set(buttonNewGame.width / 2, buttonNewGame.height / 2)\r\n    buttonNewGame.endFill();\r\n    buttonNewGame.interactive = true;\r\n    buttonNewGame.buttonMode = true;\r\n    return buttonNewGame\r\n}\r\n","import * as PIXI from 'pixi.js'\r\n\r\nimport { generateRandomInt } from '../../logics/generateRandomInt'\r\n\r\n//width row\r\nconst ROW_WIDTH = 200;\r\n//symbol size\r\nconst SYMBOL_SIZE = 150;\r\n\r\n/**\r\n * function create game area for animation\r\n * @param {Array} gameItemsArr it's array all game items\r\n * @returns object with gameAreaAnimationContainer: pixi container, itemsAnimationRef: array with results create game area(row with symbols)\r\n */\r\n\r\nexport const areaForAnimation = (gameItemsArr) => {\r\n    const gameAreaAnimationContainer = new PIXI.Container();\r\n    let itemsAnimationRef = [];\r\n\r\n    for (let i = 0; i < 3; i += 1) {\r\n        const rowContainer = new PIXI.Container();\r\n        rowContainer.x = i * ROW_WIDTH * 1.9;\r\n        gameAreaAnimationContainer.addChild(rowContainer);\r\n        const row = {\r\n            symbols: [],\r\n        };\r\n\r\n        for (let j = 0; j < 6; j += 1) {\r\n            let randomItemId = generateRandomInt(0, gameItemsArr.length - 1);\r\n            const symbolContainer = new PIXI.Container()\r\n            const symbol = new PIXI.Sprite.from(gameItemsArr[randomItemId].itemSkin);\r\n            symbol.y = 0;\r\n            symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n            symbol.x = 0;\r\n            symbol.anchor.set(0.5);\r\n            symbolContainer.addChild(symbol)\r\n            symbolContainer.y = j * SYMBOL_SIZE;\r\n            symbolContainer.x = Math.round(SYMBOL_SIZE / 2);\r\n            row.symbols.push(symbolContainer);\r\n            rowContainer.addChild(symbolContainer);\r\n\r\n        }\r\n        itemsAnimationRef.push(row);\r\n    }\r\n    return { gameAreaAnimationContainer, itemsAnimationRef };\r\n}\r\n\r\n","/**\r\n * \r\n * @param {object} gameCombo it result for create game area with line (array) items\r\n * @return {object} object with params result checking gameCombo.  \r\n *      win:bool,\r\n        loss:bool,\r\n        resultLineItem:array with win items,\r\n */\r\nexport const checkPlayResult = (gameCombo) => {\r\n    let win = false\r\n    let loss = false\r\n    let resultLineItem = [];\r\n    const wildSymbolId = 0;\r\n    //checking first game line(column)\r\n    const checkALine = () => {\r\n        if (win) {\r\n            return\r\n        }\r\n        let resultCheckWild = gameCombo.a.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.a[i];\r\n            let resultCheckArbitrary = gameCombo.a.filter(item => item.itemId === checkSymbol.itemId)\r\n\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.a]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.a]\r\n                return\r\n            }\r\n        }\r\n    }\r\n    //checking second game line(column)\r\n    const checkBLine = () => {\r\n        if (win) {\r\n            return\r\n        }\r\n        let resultCheckWild = gameCombo.b.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.b[i];\r\n            let resultCheckArbitrary = gameCombo.b.filter(item => item.itemId === checkSymbol.itemId)\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.b]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.b]\r\n                return\r\n            }\r\n        }\r\n    }\r\n    //checking third game line(column)\r\n    const checkCLine = () => {\r\n        if (win) {\r\n            return\r\n        }\r\n        let resultCheckWild = gameCombo.c.some(item => item.itemId === wildSymbolId)\r\n        for (let i = 0; i < 3; i += 1) {\r\n            let checkSymbol = gameCombo.c[i];\r\n            let resultCheckArbitrary = gameCombo.c.filter(item => item.itemId === checkSymbol.itemId)\r\n            if (resultCheckArbitrary.length === 3 && checkSymbol.itemId === wildSymbolId) {\r\n                loss = true;\r\n                resultLineItem = [...gameCombo.c]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length > 1 && resultCheckWild) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c]\r\n                return\r\n            }\r\n            if (resultCheckArbitrary.length === 3) {\r\n                win = true;\r\n                resultLineItem = [...gameCombo.c]\r\n                return\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    checkALine()\r\n    checkBLine()\r\n    checkCLine()\r\n\r\n    return {\r\n        win,\r\n        loss,\r\n        resultLineItem,\r\n    }\r\n\r\n}","module.exports = __webpack_public_path__ + \"assets/BTN_Spin.png\";","module.exports = __webpack_public_path__ + \"assets/BG.png\";","module.exports = __webpack_public_path__ + \"assets/SYM6.png\";","module.exports = __webpack_public_path__ + \"assets/SYM4.png\";","module.exports = __webpack_public_path__ + \"assets/SYM1.png\";"],"sourceRoot":""}